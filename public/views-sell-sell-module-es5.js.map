{"version":3,"sources":["webpack:///src/app/views/sell/sell.module.ts","webpack:///src/app/views/sell/sell.component.ts","webpack:///src/app/views/sell/sell.component.html","webpack:///src/app/views/sell/sell-routing.module.ts"],"names":["sellModule","window","print","imports","forRoot","declarations","SellComponent","db","groups","products","totalPrice","selectedProd","selectExist","exist","receiptExists","list","valueChanges","subscribe","i","sort","a","b","name","snapshotChanges","forEach","x","database","ref","once","then","snapshot","exists","receiptId","val","id","set","index","count","data","kdvPrice","splice","length","key","iter","element","push","payload","date","Date","faturaTarih","toLocaleString","newWin","open","document","write","toFixed","sellStock","parseFloat","stock","update","group","kdvCost","close","alinanPara","template","routes","path","component","title","sellRoutingModule","forChild","exports"],"mappings":"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","file":"views-sell-sell-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { SellComponent } from './sell.component';\nimport { sellRoutingModule } from './sell-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { Observable } from 'rxjs';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    sellRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    TabsModule,\n    ButtonsModule.forRoot(),\n    CommonModule\n  ],\n  declarations: [ SellComponent ]\n})\nexport class sellModule {\n\n  sell(){\n    window.print();\n  }\n  cancel(){\n    \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Component({\n  templateUrl: 'sell.component.html'\n})\n\nexport class SellComponent implements OnInit {\n  groups = [];\n  products =[];\n  group;\n  name;\n  photo;\n  price;\n  stocks;\n  totalPrice = 0;\n  alinanPara;\n  datestring;\n\n  selectedProd = [];\n  selectExist =[];\n  \n  exist = false;\n  faturaTarih;\n  receiptId;\n  cost;\n  kdvPrice\n  receiptExists = false;\n  ngOnInit(){}\n  \n  constructor(private db:AngularFireDatabase){\n    db.list('/groups').valueChanges().subscribe(i => {\n      this.groups = i;\n      this.groups.sort((a, b) => {\n        if (a.name < b.name) return -1\n        return a.name > b.name ? 1 : 0\n      })\n    });\n    \n    db.list(\"/products\").snapshotChanges().forEach(i=>{\n      this.products = i;\n    });\n    this.db.list(\"receipt\").valueChanges().subscribe(x=>{\n      this.db.database.ref(\"receipt\").once('value').then(snapshot=>{\n        if(snapshot.exists()){\n          this.receiptId = snapshot.val().id;\n        }\n        else{\n          this.db.list(\"/receipt\").set('id',0); \n        }\n      });\n    })\n    \n  }\n  countDecrease(index){\n    this.selectedProd[index].count--;\n    this.totalPrice -= this.selectedProd[index].data.kdvPrice;\n    if(this.selectedProd[index].count<=0){\n      this.selectedProd.splice(index,1);\n    }\n    else{\n      this.selectedProd[index].totalPrice = this.selectedProd[index].count * this.selectedProd[index].data.kdvPrice;\n    }\n    if(this.selectedProd.length == 0)\n      this.totalPrice = 0;\n  }\n  selectProduct(key){\n    var iter = 0;\n    this.selectedProd.forEach(i=>{\n      if(key == i.key){\n        this.exist = true;\n        this.selectedProd[iter].count += 1;\n        this.selectedProd[iter].totalPrice = this.selectedProd[iter].count * this.selectedProd[iter].data.kdvPrice;\n        this.totalPrice += this.selectedProd[iter].data.kdvPrice;\n      }\n      iter++;\n    })\n    if(this.exist==false){\n      this.products.forEach(element => { //TODO path ile veri ulaş.\n        if(key == element.key){\n          this.selectedProd.push({data:element.payload.val(), count:1, key:element.key, totalPrice: element.payload.val().kdvPrice,date:0});\n          this.totalPrice += element.payload.val().kdvPrice;\n        }\n      });\n    }\n    this.exist = false;\n  }\n  key;\n  sellCount;\n  sell(){\n    this.totalPrice = 0;\n    const date = new Date();\n    this.faturaTarih = date.toLocaleString('tr-TR');\n    this.receiptId++;\n    var newWin = window.open(\"\");\n    newWin.document.write(\"<!DOCTYPE html><html lang='en'> <head> <meta charset='utf-8'> <title>SKS Fatura</title> <style> body{ width: 80mm; position: relative; display: block; margin: 0px; font-size: 12px; font-weight: bold; text-transform: uppercase; } .container{ margin: 10px; } .title{ text-align: center; margin-top: 4px; } span{ width: 100px; display: inline-block; } hr.dashed { border-top: 1px dashed black; } th{ width: 80px; text-align: left; } .bodyFooter{ position: relative; } .totalText{ width: 81%; } .total{ float: right; width: 19%; } .footer{ } </style> </head> <body> <div class='container'> <div class='head'> <div class='title'>SKS</div> <br> <div><span>PEŞİN MÜŞTERİ</span>&nbsp;&nbsp;</div>\");\n    newWin.document.write(\"</div> <div><span>TARİH</span>:&nbsp;&nbsp;\"+this.faturaTarih+\"</div><div><span>FİŞ NO</span>:&nbsp;&nbsp;\"+this.receiptId+\"</div> </div> <hr class='dashed'> <div class='body'> <table> <tr> <th style='width: 40%;'>ÜRÜN ADI</th> <th style='width: 0px;'></th><th style='width: 0px;'></th> <th>FİYAT</th> <th>ADET</th> <th>TUTAR</th> </tr>\")\n    this.selectedProd.forEach(x=>{\n      this.totalPrice += x.totalPrice;\n      newWin.document.write(\"<tr>\");\n      newWin.document.write(\"<td colspan='3'>\"+x.data.name+\"</td>\");\n      newWin.document.write(\"<td>\"+x.data.kdvPrice.toFixed(2)+\"&nbsp;₺</td>\");\n      newWin.document.write(\"<td>\"+x.count+\"</td>\");\n      newWin.document.write(\"<td>\"+x.totalPrice.toFixed(2)+\"&nbsp;₺</td>\");\n      newWin.document.write(\"</tr>\");\n      x.date = this.faturaTarih;\n      var sellStock = parseFloat(x.data.stock) - parseFloat(x.count);\n      this.db.database.ref(\"/products/\"+x.key).update({stock:sellStock});\n      this.db.list(\"/statistics\").push({name: x.data.name, group: x.data.group, kdvPrice: x.data.kdvPrice, kdvCost: x.data.kdvCost, count: x.count, date: x.date});\n    })\n    newWin.document.write(\"</table> <hr class='dashed'> <div class='bodyFooter'> <span class='totalText'>TOPLAM TUTAR</span>\");\n    newWin.document.write(\"<span class='total'>\"+this.totalPrice.toFixed(2)+\"&nbsp;₺</span>\");\n    newWin.document.write(\"</div> </div> <hr class='dashed'> <div class='footer'> </div> </div> </body></html>\");\n    newWin.print();  \n    newWin.close();\n    this.totalPrice = 0;  \n    this.selectedProd.splice(0,this.selectedProd.length);\n    this.db.list(\"/receipt\").set('id', this.receiptId);\n    this.alinanPara = 0;\n  }\n  cancel(){\n    this.selectedProd.splice(0,this.selectedProd.length);\n    this.totalPrice = 0;\n    this.alinanPara = 0;\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n      <tabset>\\n        <ng-container *ngFor=\\\"let group of groups\\\">\\n          <tab heading=\\\"{{group.name}}\\\">\\n            <div class=\\\"row\\\">\\n              <div *ngFor=\\\"let prod of products\\\">\\n                <div class=\\\"float-left\\\" *ngIf=\\\"group.name == prod.payload.val().group && prod.payload.val().stock > 0\\\" (click)=\\\"selectProduct(prod.key)\\\">\\n                  <div class=\\\"card\\\" style=\\\"cursor: pointer;\\\">\\n                    <div class=\\\"body\\\">\\n                      <img style=\\\"width: 128px;height: 128px;\\\" src=\\\"{{prod.payload.val().photo}}\\\" class=\\\"rounded float-left\\\" alt=\\\"...\\\">\\n                    </div>\\n                    <div class=\\\"footer\\\" style=\\\"text-align: center;\\\">\\n                      {{ prod.payload.val().name }}\\n                    </div>  \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>\\n        </ng-container>\\n      </tabset>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"cil-cash\\\"></i> Satılacaklar\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\" id=\\\"printTable\\\">\\n            <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"selectedProd.length > 0\\\">\\n              <thead>\\n                <tr>\\n                  <th></th>\\n                  <th>Ürün adı</th>\\n                  <th>Adet</th>\\n                  <th>Fiyat</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of selectedProd, let i = index\\\">\\n                  <td (click)=\\\"countDecrease(i)\\\" style=\\\"display: table-cell;vertical-align: middle;cursor: pointer;text-align: center;\\\"><i class=\\\"cil-minus\\\" style=\\\"color:red\\\"></i></td>\\n                  <td>{{item.data.name}}</td>\\n                  <td>{{item.count}}</td>\\n                  <td>{{item.totalPrice | number : '.2-2' }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <label>Toplam tutar: </label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <label>{{totalPrice | number : '.2-2' }}</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <label>Alınan para: </label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"input-prepend input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">₺</span>\\n                </div>\\n                <input id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"0\\\" name=\\\"alinanPara\\\" [(ngModel)]=\\\"alinanPara\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <label>Para üstü: </label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <label *ngIf=\\\"alinanPara-this.totalPrice<0\\\">Eksik para verildi.</label>\\n              <label *ngIf=\\\"alinanPara-this.totalPrice>0\\\">{{alinanPara-totalPrice | number : '.2-2' }}₺</label>\\n              <label *ngIf=\\\"alinanPara-this.totalPrice==0\\\">Ödendi</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button (click)=\\\"sell()\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square btn-block\\\" [disabled]=\\\"this.totalPrice==0\\\">SAT</button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button (click)=\\\"cancel()\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-square btn-block\\\">VAZGEÇ</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SellComponent } from './sell.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SellComponent,\n    data: {\n      title: 'sell'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class sellRoutingModule {}\n"]}