{"version":3,"sources":["webpack:///src/app/views/stock/stock.component.ts","webpack:///src/app/views/stock/stock.module.ts","webpack:///src/app/views/stock/pipe.ts","webpack:///src/app/views/stock/Stock.component.html","webpack:///src/app/views/stock/stock-routing.module.ts"],"names":["StockComponent","db","stocks","total","stock","materialCount","prodCount","stockDetail","materialsList","modalDetail","oldCost","list","valueChanges","subscribe","i","groups","snapshotChanges","forEach","products","key","result","element","group","payload","val","name","photo","cost","undefined","material","keys","array","oldStock","newStock","date","Date","dateString","toLocaleString","index","length","splice","database","ref","update","set","push","process","largeModal2","hide","x","id","amount","average","largeModal","template","StockModule","imports","forRoot","declarations","searchPipe2","value","args","toLowerCase","filter","item","JSON","stringify","includes","routes","path","component","data","title","stockRoutingModule","forChild","exports"],"mappings":"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","file":"views-stock-stock-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Component({\n  templateUrl: 'Stock.component.html'\n})\nexport class StockComponent implements OnInit {\n  @ViewChild('largeModal') public largeModal: ModalDirective;\n  @ViewChild('largeModal2') public largeModal2: ModalDirective;\n  search;\n  group;\n  name;\n  photo;\n  stocks = 0;\n  total = 0;\n  keys;\n  stock=null;\n  groups;\n  materialCount = 0;\n  products;\n  cost;\n  prodCount = 1;\n  stockDetail = [];\n  materialsList = [];\n  modalDetail = [];\n  oldCost = 0;\n  dateString;\n  result;\n  constructor(private db:AngularFireDatabase){\n    db.list('/groups').valueChanges().subscribe(i => {\n      this.groups = i;\n    });\n    db.list('/products').snapshotChanges().forEach(i=>{\n      this.products = i;\n    });\n  }\n  ngOnInit(){}\n  modalOpen(key){\n    this.result = 1;\n    this.products.forEach(element => {\n      if(key == element.key){\n        this.group = element.payload.val().group;\n        this.name = element.payload.val().name;\n        this.photo = element.payload.val().photo;\n        this.cost = element.payload.val().cost;\n        this.oldCost = element.payload.val().cost;\n        if(element.payload.val().stockDetail != undefined)\n          this.stockDetail = element.payload.val().stockDetail;\n        this.stocks = element.payload.val().stock;\n        this.prodCount = element.payload.val().prodCount;\n        this.materialsList = element.payload.val().material;\n        this.materialCount = element.payload.val().materialCount;\n      }\n    });\n    this.keys = key;\n  }\n\n  deleteStock(stock){\n    var array = [];\n    this.products.forEach(element => {\n      if(element.key == this.keys){\n        array = element.payload.val().stockDetail;\n      }\n    });\n    var oldStock = stock;\n    var newStock = stock;\n    const date = new Date();\n    this.dateString = date.toLocaleString('tr-TR');\n    if(this.stockDetail != undefined){\n      array = this.stockDetail;\n      for (let index = array.length-1; index > 0; index--) {\n        array[index].stock -= newStock;\n        if(array[index].stock > 0){\n          break;\n        }\n        else{\n          newStock = array[index].stock * -1;\n          array.splice(index,1);\n        }\n      }\n      this.db.database.ref('/products/'+ this.keys).update({stock: this.stocks - stock});\n      this.db.database.ref('/products/'+ this.keys+'/stockDetail').set(array);\n      this.db.list(\"/statistics/stock\").push({process:\"Depo silme\", name:this.name,group:this.group,date:this.dateString,stock:oldStock,cost:0});    \n    }\n    this.largeModal2.hide();\n    this.stock = null;\n  }\n\n  addStock(stock){\n    const date = new Date();\n    this.dateString = date.toLocaleString('tr-TR');\n    this.result = 1; \n    this.total = this.stocks + stock * this.prodCount;\n    if(this.materialCount != 0){\n      this.materialsList.forEach(x=>{\n        this.products.forEach(element => {\n          if(element.key == x.id){\n            var stocks = element.payload.val().stock;\n            if(stocks - x.amount * stock < 0)\n              this.result = 0;\n          }\n        })\n      });\n      if(this.result == 1){\n        this.materialsList.forEach(x=>{\n          this.products.forEach(element => {\n            if(element.key == x.id){\n              var stocks = element.payload.val().stock;\n              stocks -= x.amount * stock;\n              this.db.database.ref('/products/'+ x.id).update({stock:stocks});\n            }\n          })\n        })\n        this.stockDetail.push({stock:stock, cost:this.cost});\n        this.db.database.ref('/products/'+this.keys+'/stockDetail').update(this.stockDetail);\n        this.db.database.ref('/products/'+this.keys).update({stock:this.total});\n        var average = 0;\n        if(this.stockDetail.length > 0){\n          var amount = 0;\n          this.stockDetail.forEach(element => {\n            average += element.cost * element.stock;\n            amount += element.stock;\n          });\n          average = average / amount;\n        }\n        else if(this.stockDetail.length == 1){\n          average = this.stockDetail[0].cost;\n        }\n        this.db.database.ref(\"/products/\"+this.keys).update({cost: average});\n        this.largeModal.hide();\n        this.total = 0;\n        this.db.list(\"/statistics/stock\").push({process:\"Depo ekleme\", name:this.name,group:this.group,date:this.dateString,stock:stock,cost:this.oldCost});    \n        this.stock=null;\n      }\n    }\n    else{\n      this.stockDetail.push({stock:stock, cost:this.cost});\n      if(this.stockDetail.length > 0){\n        var average = 0;\n        var amount = 0;\n        this.stockDetail.forEach(element => {\n          average += element.cost * element.stock;\n          amount += element.stock;\n        });\n        average = average / amount;\n        this.db.database.ref(\"/products/\"+this.keys).update({cost: average});\n      }\n      else if(this.stockDetail.length == 1){\n        this.db.database.ref(\"/products/\"+this.keys).update({cost: this.stockDetail[0].cost});\n      }\n      this.db.database.ref('/products/'+this.keys+'/stockDetail').update(this.stockDetail);\n      this.db.database.ref('/products/'+this.keys).update({stock:this.total});\n      this.db.list(\"/statistics/stock\").push({process:\"Depo ekleme\", name:this.name,group:this.group,date:this.dateString,stock:stock,cost:this.cost});    \n      this.largeModal.hide();\n      this.total = 0;\n      this.stock=null;\n    }\n    this.products.forEach(element => {\n      if(element.payload.val().materialCount > 0){\n        element.payload.val().material.forEach(x => {\n          if(this.keys == x.id){\n            this.db.database.ref(\"/products/\"+ element.key).update({cost: (element.payload.val().cost + (-this.oldCost + average) * x.amount) });\n            return;\n          }\n        });\n      }\n    });\n    this.stockDetail = [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from \"@angular/common\";\nimport { StockComponent } from './stock.component';\nimport { stockRoutingModule } from './stock-routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { searchPipe2 } from './pipe';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    stockRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    CommonModule,\n    ModalModule,\n  ],\n  declarations: [ \n    StockComponent,\n    searchPipe2,\n  ]\n})\nexport class StockModule { \n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe2 implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> STOK LİSTESİ\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-prepend\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n                </span>\\n                <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"search\\\">\\n              </div>\\n                </div>\\n            <div class=\\\"col-12 mt-4\\\">\\n              <table class=\\\"table table-bordered table-striped table-sm\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Ürün adı</th>\\n                    <th>Grup</th>\\n                    <th>Maliyet (KDV)</th>\\n                    <th>Adet</th>\\n                    <th>Stok ekleme</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let item of products | filter:search\\\">\\n                    <td>{{ item.payload.val().name }}</td>\\n                    <td>{{ item.payload.val().group }}</td>\\n                    <td>{{ item.payload.val().cost | number : '.2-2'  }}₺</td>\\n                    <td>{{ item.payload.val().stock | number : '.2-2'  }}</td>\\n                    <td>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                          <button type=\\\"button\\\" class=\\\"btn btn-success btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal.show()\\\">Stok ekle</button>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal2.show()\\\">Stok sil</button>\\n                        </div>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #largeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Stok ekleme işlemi</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\n                <div class=\\\"col-md-9\\\">\\n                  <input disabled [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\n                  <span class=\\\"help-block\\\"></span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">₺</span>\\n                    </div>\\n                    <input disabled [(ngModel)]=\\\"cost\\\" name=\\\"cost\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.cost}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">.00</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\n                <div class=\\\"col-md-9\\\">\\n                  <select disabled id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\n                    <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\n                <div class=\\\"col-md-6\\\">\\n                  <input disabled [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n                </div>\\n              </div>\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Malzeme adı</th>\\n                    <th>Kullanılan miktar</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\n                    <td>{{ material.name }}</td>\\n                    <td>{{ material.amount }}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti KDV dahil giriniz</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">₺</span>\\n                    </div>\\n                    <input [(ngModel)]=\\\"cost\\\" name=\\\"cost\\\" id=\\\"appendedPrependedInput\\\" [disabled]=\\\"this.materialCount > 1\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.cost}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">.00</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Eklenecek stok sayısı</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <input [(ngModel)]=\\\"stock\\\" name=\\\"stock\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"Şuanki stok: {{this.stocks}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">adet</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                Stok eklenirken (adet, kg, teneke, paket, koli) birim maliyeti girilmeli.\\n              </div>\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"result == 0\\\">\\n                <div class=\\\"alert alert-warning col-12\\\" role=\\\"alert\\\">\\n                  Kullanılan malzeme stoğu bu ürünü üretmek için yeterli değildir.\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"largeModal.hide()\\\">Vazgeç</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addStock(stock)\\\" [disabled]=\\\"stock=='' || stock==null\\\">Değişiklikleri kaydet</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\\n\\n<div bsModal #largeModal2=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Stok silme işlemi</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal2.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\n                <div class=\\\"col-md-9\\\">\\n                  <input disabled [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\n                  <span class=\\\"help-block\\\"></span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">₺</span>\\n                    </div>\\n                    <input disabled [(ngModel)]=\\\"cost\\\" name=\\\"cost\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.cost}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">.00</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\n                <div class=\\\"col-md-9\\\">\\n                  <select disabled id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\n                    <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\n                <div class=\\\"col-md-6\\\">\\n                  <input disabled [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n                </div>\\n              </div>\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Malzeme adı</th>\\n                    <th>Kullanılan miktar</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\n                    <td>{{ material.name }}</td>\\n                    <td>{{ material.amount }}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Silinecek stok sayısı</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <input [(ngModel)]=\\\"stock\\\" name=\\\"stock\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"Şuanki stok: {{this.stocks}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">adet</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"largeModal2.hide()\\\">Vazgeç</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteStock(stock)\\\" [disabled]=\\\"stock > this.stocks\\\">Değişiklikleri kaydet</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StockComponent } from './stock.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StockComponent,\n    data: {\n      title: 'stock'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class stockRoutingModule {}\n"]}