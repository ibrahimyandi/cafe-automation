{"version":3,"sources":["webpack:///src/app/views/products/products-routing.module.ts","webpack:///src/app/views/products/Products.component.html","webpack:///src/app/views/products/products.component.ts","webpack:///src/app/views/products/pipe.ts","webpack:///src/app/views/products/products.module.ts"],"names":["routes","path","component","data","title","stockRoutingModule","imports","forChild","exports","ProductsComponent","db","name","price","kdv","group","photo","cost","prodCount","materialCount","groups","material","kdvPrice","modalDetail","materialsList","list","valueChanges","subscribe","i","snapshotChanges","forEach","products","n","Array","process","push","id","amount","splice","length","key","element","payload","val","undefined","costUpdate","keys","database","ref","update","remove","parseFloat","stock","cafe1Stock","cafe2Stock","restaurant1Stock","largeModal","hide","arr","split","x","template","searchPipe2","value","args","toLowerCase","filter","item","JSON","stringify","includes","ProductsModule","forRoot","declarations"],"mappings":"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","file":"views-products-products-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductsComponent } from './products.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent,\n    data: {\n      title: 'products'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class stockRoutingModule {}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <i class=\\\"icon-drop\\\"></i> Ürün Ekle / Düzenle / Sil\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Ürün ekle / düzenle</strong> \\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n                    <span class=\\\"help-block\\\"></span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürünün satış fiyatı</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">₺</span>\\n                      </div>\\n                      <input [(ngModel)]=\\\"price\\\" name=\\\"price\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">.00</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün KDV oranı</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <input [(ngModel)]=\\\"kdv\\\" name=\\\"kdv\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.modalDetail[3]}}\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">%</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <select id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\">\\n                      <option value=\\\"{{item.name}}\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\n                  <div class=\\\"col-md-6\\\">\\n                    <input [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"URL\\\">\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Üretilecek adet</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <input [(ngModel)]=\\\"prodCount\\\" name=\\\"prodCount\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\">\\n                    </div>\\n                  </div>\\n                </div>  \\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Kullanılacak malzeme sayısı</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"materialChanged(1)\\\">Arttır</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"materialChanged(0)\\\">Azalt</button>\\n                  </div>\\n                </div>\\n                <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount > 0\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Malzeme adı</th>\\n                      <th>Kullanılan miktar</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\n                      <td>{{materialsList[i].name}}\\n                        <select id=\\\"select3\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"materialsList[i].name\\\" name=\\\"materialsList[i].name\\\" (ngModelChange)=\\\"selectMaterial(i,$event)\\\">\\n                          <ng-container *ngFor=\\\"let item of products\\\">\\n                            <option value=\\\"{{ item.payload.key }}***{{ item.payload.val().name }}\\\" *ngIf=\\\"item.payload.val().group == 'malzeme'\\\">{{ item.payload.val().name }}</option>\\n                          </ng-container>\\n                        </select> \\n                      </td>\\n                      <td>\\n                        <input [(ngModel)]=\\\"materialsList[i].amount\\\" name=\\\"{{materialsList[i].amount}}\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"\\\" (ngModelChange)=\\\"costUpdate()\\\">\\n                      </td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost | number : '.2-2' }}₺</label>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Adet maliyeti</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <label class=\\\"col-form-label\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost / prodCount | number : '.2-2' }}₺</label>\\n                  </div>\\n                </div>  \\n              </form>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <button [disabled]=\\\"name==null || price==null || kdv < 0 || materialCount < 0 || materialCount == null || kdv == null || group==null || photo==null || name=='' || price=='' || group=='' || photo==''\\\" type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addProduct(name, price, kdv, group, photo)\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Ekle</button>\\n              <button type=\\\"reset\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"clear()\\\"><i class=\\\"fa fa-ban\\\"></i> Temizle</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n              <i class=\\\"fa fa-align-justify\\\"></i> ÜRÜN LİSTESİ\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n                    </span>\\n                    <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"searchProdList\\\" [(ngModel)]=\\\"searchProdList\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\">\\n                  </div>\\n                    </div>\\n                <div class=\\\"col-12 mt-4\\\">\\n                  <table class=\\\"table table-bordered table-striped table-sm\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>Ürün adı</th>\\n                        <th>Ürün gurubu</th>\\n                        <th>Fiyatı</th>\\n                        <th>KDV oranı</th>\\n                        <th>KDV dahil fiyatı</th>\\n                        <th>Stok</th>\\n                        <th>Ayarlar</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of products | filter:searchProdList\\\">\\n                        <td>{{ item.payload.val().name }}</td>\\n                        <td>{{ item.payload.val().group }}</td>\\n                        <td>{{ item.payload.val().price }}₺</td>\\n                        <td>{{ item.payload.val().kdv }}</td>\\n                        <td>{{ item.payload.val().kdvPrice | number : '.2-2' }}₺</td>\\n                        <td>{{ item.payload.val().stock | number : '.2-2' }}</td>\\n                        <td>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-6\\\">\\n                              <button type=\\\"button\\\" class=\\\"btn btn-success btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal.show()\\\"><i class=\\\"cil-pencil mr-2\\\"></i>Düzenle</button>\\n                            </div>\\n                            <div class=\\\"col-6\\\">\\n                              <button (click)=\\\"cancel()\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-square btn-block\\\" (click)=\\\"deleteProduct(item.key)\\\"><i class=\\\"cil-trash mr-2\\\"></i>Sil</button>\\n                            </div>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--/.col-->\\n      </div>    \\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #largeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Ürünü Düzenle</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\n                <div class=\\\"col-md-9\\\">\\n                  <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\n                  <span class=\\\"help-block\\\"></span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürünün satış fiyatı</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">₺</span>\\n                    </div>\\n                    <input [(ngModel)]=\\\"price\\\" name=\\\"price\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.price}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">.00</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün KDV oranı</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <input [(ngModel)]=\\\"kdv\\\" name=\\\"kdv\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.kdv}}\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">%</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\n                <div class=\\\"col-md-9\\\">\\n                  <select id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\n                    <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\n                <div class=\\\"col-md-6\\\">\\n                  <input [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Üretilecek adet</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <div class=\\\"input-prepend input-group\\\">\\n                    <input [(ngModel)]=\\\"prodCount\\\" name=\\\"prodCount\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Kullanılacak malzeme sayısı</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"materialChanged(1)\\\">Arttır</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"materialChanged(0)\\\">Azalt</button>\\n                </div>\\n              </div>\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Malzeme adı</th>\\n                    <th>Kullanılan miktar</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\n                    <td>{{materialsList[i].name}}\\n                      <select id=\\\"select3\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"materialsList[i].name\\\" name=\\\"materialsList[i].name\\\" (ngModelChange)=\\\"selectMaterial(i,$event)\\\">\\n                        <ng-container *ngFor=\\\"let item of products\\\">\\n                          <option value=\\\"{{ item.payload.key }}***{{ item.payload.val().name }}\\\" *ngIf=\\\"item.payload.val().group == 'malzeme' && name != item.payload.val().name\\\">{{ item.payload.val().name }}</option>\\n                        </ng-container>\\n                      </select> \\n                    </td>\\n                    <td>\\n                      <input [(ngModel)]=\\\"materialsList[i].amount\\\" name=\\\"{{materialsList[i].amount}}\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"\\\" (ngModelChange)=\\\"costUpdate()\\\">\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <label class=\\\"col-form-label\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost | number : '.2-2' }}₺</label>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Adet maliyeti</label>\\n                <div class=\\\"controls col-md-9\\\">\\n                  <label class=\\\"col-form-label\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost / prodCount | number : '.2-2' }}₺</label>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Vazgeç</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editProduct(name, price, kdv, group, photo)\\\">Değişiklikleri kaydet</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\n@Component({\n  templateUrl: 'Products.component.html'\n})\nexport class ProductsComponent implements OnInit {\n  @ViewChild('largeModal') public largeModal: ModalDirective;\n  @ViewChild('warningModal') public warningModal: ModalDirective;\n  \n  key;\n  searchProdList;\n  name = null;\n  price = null;\n  kdv = null;\n  group = null;\n  photo = null;\n  cost = 0;\n  prodCount = 1;\n  materialCount = 0;\n  selectedMaterial;\n  groups = null;\n  material = null;\n  kdvPrice = 0;\n  products;\n  modalDetail = [];\n  materialsList: Array<{ id: string, name: string, amount: number }> = [];\n  keys;\n  constructor(private db: AngularFireDatabase,) {\n    db.list('/groups').valueChanges().subscribe(i => {\n      this.groups = i;\n    });\n    db.list('/products').snapshotChanges().forEach(i=>{\n      this.products = i;\n    });\n  }\n  numSequence(n: number): Array<number> {\n    return Array(n);\n  }\n  materialChanged(process){\n    if(process == 1){\n      this.materialsList.push({id:'', name:'',amount:0});\n      this.materialCount++;\n    }\n    else{\n      this.materialsList.splice(this.materialsList.length-1, this.materialsList.length);\n      if(this.materialCount > 0)\n        this.materialCount--;\n    }\n  }\n  modalOpen(key){\n    this.materialsList.splice(0, this.materialsList.length);\n    this.products.forEach(element => {\n      if(element.key == key){\n        this.group = element.payload.val().group;\n        this.name = element.payload.val().name;\n        this.price = element.payload.val().price;\n        this.prodCount = element.payload.val().prodCount;\n        this.kdv = element.payload.val().kdv;\n        this.photo = element.payload.val().photo;\n        this.materialCount = element.payload.val().materialCount;\n        if(element.payload.val().material != undefined)\n          this.materialsList = element.payload.val().material;\n      }\n    });\n    this.costUpdate();\n    if(this.keys != undefined)\n      this.db.database.ref('/products/'+this.keys).update({cost:this.cost});\n    this.keys = key;\n  }\n  deleteProduct(key){\n    this.db.list('/products/'+key).remove();\n  }\n  addProduct(name, price, kdv, group, photo){\n    this.db.list('/products').push({name:name,price:price,cost:this.cost,kdv:kdv,kdvPrice:parseFloat(price)*(1+parseFloat(kdv)/100),group:group,photo:photo,stock:0,cafe1Stock:0,cafe2Stock:0,restaurant1Stock:0,materialCount:this.materialCount, prodCount:this.prodCount,material:this.materialsList});\n    this.name = \"\";\n    this.price = \"\";\n    this.kdv = \"\";\n    this.prodCount = 1;\n    this.group = \"\";\n    this.photo = \"\";\n    this.materialCount = 0;\n  }\n  clear(){\n    this.name = \"\";\n    this.price = \"\";\n    this.kdv = \"\";\n    this.prodCount = 1;\n    this.group = \"\";\n    this.photo = \"\";\n    this.materialCount = 0;\n  }\n  editProduct(name, price, kdv, group, photo){\n    this.db.database.ref('/products/'+this.keys).update({name:name, price:price,kdv:kdv,kdvPrice:parseFloat(price)*(1+parseFloat(kdv)/100),cost:this.cost,group:group, photo:photo,materialCount:this.materialCount,prodCount:this.prodCount,material:this.materialsList});\n    this.largeModal.hide();\n    this.name = \"\";\n    this.price = \"\";\n    this.prodCount = 1;\n    this.kdv = \"\";\n    this.group = \"\";\n    this.photo = \"\";\n    this.materialCount = 0;\n  }\n  selectMaterial(i,arr){\n    this.cost = 0;\n    const [id,name] = arr.split(\"***\");\n    this.materialsList[i].id = id;\n    this.materialsList[i].name = name;\n    this.materialsList.forEach(x=>{\n      this.products.forEach(element => {\n        if(element.key == x.id){\n          this.cost += x.amount * element.payload.val().cost;\n        }        \n      });\n    });\n  }\n  costUpdate(){\n    this.cost = 0;\n    this.materialsList.forEach(x=>{\n      this.products.forEach(element => {\n        if(element.key == x.id){\n          this.cost += x.amount * element.payload.val().cost;\n        }        \n      });\n    });\n  }\n  cancel(){\n    this.name = \"\";\n    this.price = \"\";\n    this.kdv = \"\";\n    this.prodCount = 1;\n    this.group = \"\";\n    this.photo = \"\";\n    this.materialCount = 0;\n    this.largeModal.hide();\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe2 implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from \"@angular/common\";\nimport { ProductsComponent } from './products.component';\nimport { stockRoutingModule } from './products-routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { searchPipe2 } from './pipe';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    stockRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    CommonModule,\n    ModalModule,\n  ],\n  declarations: [ \n    ProductsComponent,\n    searchPipe2,\n  ]\n})\nexport class ProductsModule { \n\n}\n"]}