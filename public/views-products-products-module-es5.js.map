{"version":3,"sources":["webpack:///src/app/views/products/products-routing.module.ts","webpack:///src/app/views/products/Products.component.html","webpack:///src/app/views/products/products.component.ts","webpack:///src/app/views/products/pipe.ts","webpack:///src/app/views/products/products.module.ts"],"names":["routes","path","component","data","title","stockRoutingModule","imports","forChild","exports","ProductsComponent","db","name","price","kdv","group","photo","cost","prodCount","materialCount","groups","material","kdvPrice","modalDetail","materialsList","list","valueChanges","subscribe","i","snapshotChanges","forEach","products","n","Array","process","push","id","amount","splice","length","key","element","payload","val","undefined","costUpdate","keys","database","ref","update","remove","parseFloat","stock","cafe1Stock","cafe2Stock","restaurant1Stock","largeModal","hide","arr","split","x","template","searchPipe2","value","args","toLowerCase","filter","item","JSON","stringify","includes","ProductsModule","forRoot","declarations"],"mappings":"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","file":"views-products-products-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProductsComponent } from './products.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsComponent,\r\n    data: {\r\n      title: 'products'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class stockRoutingModule {}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <i class=\\\"icon-drop\\\"></i> Ürün Ekle / Düzenle / Sil\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n              <strong>Ürün ekle / düzenle</strong> \\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n                    <span class=\\\"help-block\\\"></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürünün satış fiyatı</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\"> ₺</span>\\r\\n                      </div>\\r\\n                      <input [(ngModel)]=\\\"price\\\" name=\\\"price\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\">\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\">.00</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün KDV oranı</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <input [(ngModel)]=\\\"kdv\\\" name=\\\"kdv\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.modalDetail[3]}}\\\">\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\">%</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <select id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\">\\r\\n                      <option value=\\\"{{item.name}}\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <input [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"URL\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Üretilecek adet</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <input [(ngModel)]=\\\"prodCount\\\" name=\\\"prodCount\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>  \\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Kullanılacak malzeme sayısı</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"materialChanged(1)\\\">Arttır</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"materialChanged(0)\\\">Azalt</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount > 0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Malzeme adı</th>\\r\\n                      <th>Kullanılan miktar</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\r\\n                      <td>{{materialsList[i].name}}\\r\\n                        <select id=\\\"select3\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"materialsList[i].name\\\" name=\\\"materialsList[i].name\\\" (ngModelChange)=\\\"selectMaterial(i,$event)\\\">\\r\\n                          <ng-container *ngFor=\\\"let item of products\\\">\\r\\n                            <option value=\\\"{{ item.payload.key }}***{{ item.payload.val().name }}\\\" *ngIf=\\\"item.payload.val().group == 'malzeme'\\\">{{ item.payload.val().name }}</option>\\r\\n                          </ng-container>\\r\\n                        </select> \\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <input [(ngModel)]=\\\"materialsList[i].amount\\\" name=\\\"{{materialsList[i].amount}}\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"\\\" (ngModelChange)=\\\"costUpdate()\\\">\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost | number : '.2-2' }} ₺</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Adet maliyeti</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <label class=\\\"col-form-label\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost / prodCount | number : '.2-2' }} ₺</label>\\r\\n                  </div>\\r\\n                </div>  \\r\\n              </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n              <button [disabled]=\\\"name==null || price==null || kdv < 0 || materialCount < 0 || materialCount == null || kdv == null || group==null || photo==null || name=='' || price=='' || group=='' || photo==''\\\" type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addProduct(name, price, kdv, group, photo)\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Ekle</button>\\r\\n              <button type=\\\"reset\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"clear()\\\"><i class=\\\"fa fa-ban\\\"></i> Temizle</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n              <i class=\\\"fa fa-align-justify\\\"></i> ÜRÜN LİSTESİ\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-4\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-prepend\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\r\\n                    </span>\\r\\n                    <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"searchProdList\\\" [(ngModel)]=\\\"searchProdList\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\">\\r\\n                  </div>\\r\\n                    </div>\\r\\n                <div class=\\\"col-12 mt-4\\\">\\r\\n                  <table class=\\\"table table-bordered table-striped table-sm\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Ürün adı</th>\\r\\n                        <th>Ürün gurubu</th>\\r\\n                        <th>Fiyatı</th>\\r\\n                        <th>KDV oranı</th>\\r\\n                        <th>KDV dahil fiyatı</th>\\r\\n                        <th>Stok</th>\\r\\n                        <th>Ayarlar</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of products | filter:searchProdList\\\">\\r\\n                        <td>{{ item.payload.val().name }}</td>\\r\\n                        <td>{{ item.payload.val().group }}</td>\\r\\n                        <td>{{ item.payload.val().price }} ₺</td>\\r\\n                        <td>{{ item.payload.val().kdv }}</td>\\r\\n                        <td>{{ item.payload.val().kdvPrice | number : '.2-2' }} ₺</td>\\r\\n                        <td>{{ item.payload.val().stock + item.payload.val().cafe1Stock + item.payload.val().cafe2Stock + item.payload.val().restaurant1Stock | number : '.2-2' }}</td>\\r\\n                        <td>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-6\\\">\\r\\n                              <button type=\\\"button\\\" class=\\\"btn btn-success btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal.show()\\\"><i class=\\\"cil-pencil mr-2\\\"></i>Düzenle</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-6\\\">\\r\\n                              <button (click)=\\\"cancel()\\\" type=\\\"button\\\" [disabled]=\\\"(item.payload.val().stock + item.payload.val().cafe1Stock + item.payload.val().cafe2Stock + item.payload.val().restaurant1Stock) > 0\\\" class=\\\"btn btn-danger btn-square btn-block\\\" (click)=\\\"deleteProduct(item.key)\\\"><i class=\\\"cil-trash mr-2\\\"></i>Sil</button>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n      </div>    \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #largeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Ürünü Düzenle</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                  <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\r\\n                  <span class=\\\"help-block\\\"></span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürünün satış fiyatı</label>\\r\\n                <div class=\\\"controls col-md-9\\\">\\r\\n                  <div class=\\\"input-prepend input-group\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\"> ₺</span>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"price\\\" name=\\\"price\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.price}}\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <span class=\\\"input-group-text\\\">.00</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün KDV oranı</label>\\r\\n                <div class=\\\"controls col-md-9\\\">\\r\\n                  <div class=\\\"input-prepend input-group\\\">\\r\\n                    <input [(ngModel)]=\\\"kdv\\\" name=\\\"kdv\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.kdv}}\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <span class=\\\"input-group-text\\\">%</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                  <select id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\r\\n                    <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <input [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Üretilecek adet</label>\\r\\n                <div class=\\\"controls col-md-9\\\">\\r\\n                  <div class=\\\"input-prepend input-group\\\">\\r\\n                    <input [(ngModel)]=\\\"prodCount\\\" name=\\\"prodCount\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Kullanılacak malzeme sayısı</label>\\r\\n                <div class=\\\"controls col-md-9\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"materialChanged(1)\\\">Arttır</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"materialChanged(0)\\\">Azalt</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Malzeme adı</th>\\r\\n                    <th>Kullanılan miktar</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\r\\n                    <td>{{materialsList[i].name}}\\r\\n                      <select id=\\\"select3\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"materialsList[i].name\\\" name=\\\"materialsList[i].name\\\" (ngModelChange)=\\\"selectMaterial(i,$event)\\\">\\r\\n                        <ng-container *ngFor=\\\"let item of products\\\">\\r\\n                          <option value=\\\"{{ item.payload.key }}***{{ item.payload.val().name }}\\\" *ngIf=\\\"item.payload.val().group == 'malzeme' && name != item.payload.val().name\\\">{{ item.payload.val().name }}</option>\\r\\n                        </ng-container>\\r\\n                      </select> \\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input [(ngModel)]=\\\"materialsList[i].amount\\\" name=\\\"{{materialsList[i].amount}}\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"\\\" (ngModelChange)=\\\"costUpdate()\\\">\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\r\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\r\\n                <div class=\\\"controls col-md-9\\\">\\r\\n                  <label class=\\\"col-form-label\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost | number : '.2-2' }} ₺</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"materialCount > 0\\\">\\r\\n                <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Adet maliyeti</label>\\r\\n                <div class=\\\"controls col-md-9\\\">\\r\\n                  <label class=\\\"col-form-label\\\" for=\\\"appendedPrependedInput\\\">{{ this.cost / prodCount | number : '.2-2' }} ₺</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Vazgeç</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editProduct(name, price, kdv, group, photo)\\\">Değişiklikleri kaydet</button>\\r\\n      </div>\\r\\n    </div><!-- /.modal-content -->\\r\\n  </div><!-- /.modal-dialog -->\\r\\n</div><!-- /.modal -->\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  templateUrl: 'Products.component.html'\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  @ViewChild('largeModal') public largeModal: ModalDirective;\r\n  @ViewChild('warningModal') public warningModal: ModalDirective;\r\n  \r\n  key;\r\n  searchProdList;\r\n  name = null;\r\n  price = null;\r\n  kdv = null;\r\n  group = null;\r\n  photo = null;\r\n  cost = 0;\r\n  prodCount = 1;\r\n  materialCount = 0;\r\n  selectedMaterial;\r\n  groups = null;\r\n  material = null;\r\n  kdvPrice = 0;\r\n  products;\r\n  modalDetail = [];\r\n  materialsList: Array<{ id: string, name: string, amount: number }> = [];\r\n  keys;\r\n  constructor(private db: AngularFireDatabase,) {\r\n    db.list('/groups').valueChanges().subscribe(i => {\r\n      this.groups = i;\r\n    });\r\n    db.list('/products').snapshotChanges().forEach(i=>{\r\n      this.products = i;\r\n    });\r\n  }\r\n  numSequence(n: number): Array<number> {\r\n    return Array(n);\r\n  }\r\n  materialChanged(process){\r\n    if(process == 1){\r\n      this.materialsList.push({id:'', name:'',amount:0});\r\n      this.materialCount++;\r\n    }\r\n    else{\r\n      this.materialsList.splice(this.materialsList.length-1, this.materialsList.length);\r\n      if(this.materialCount > 0)\r\n        this.materialCount--;\r\n    }\r\n  }\r\n  modalOpen(key){\r\n    this.materialsList.splice(0, this.materialsList.length);\r\n    this.products.forEach(element => {\r\n      if(element.key == key){\r\n        this.group = element.payload.val().group;\r\n        this.name = element.payload.val().name;\r\n        this.price = element.payload.val().price;\r\n        this.prodCount = element.payload.val().prodCount;\r\n        this.kdv = element.payload.val().kdv;\r\n        this.photo = element.payload.val().photo;\r\n        this.materialCount = element.payload.val().materialCount;\r\n        if(element.payload.val().material != undefined)\r\n          this.materialsList = element.payload.val().material;\r\n      }\r\n    });\r\n    this.costUpdate();\r\n    if(this.keys != undefined)\r\n      this.db.database.ref('/products/'+this.keys).update({cost:this.cost});\r\n    this.keys = key;\r\n  }\r\n  deleteProduct(key){\r\n    this.db.list('/products/'+key).remove();\r\n  }\r\n  addProduct(name, price, kdv, group, photo){\r\n    this.db.list('/products').push({name:name,price:price,cost:this.cost,kdv:kdv,kdvPrice:parseFloat(price)*(1+parseFloat(kdv)/100),group:group,photo:photo,stock:0,cafe1Stock:0,cafe2Stock:0,restaurant1Stock:0,materialCount:this.materialCount, prodCount:this.prodCount,material:this.materialsList});\r\n    this.name = \"\";\r\n    this.price = \"\";\r\n    this.kdv = \"\";\r\n    this.prodCount = 1;\r\n    this.group = \"\";\r\n    this.photo = \"\";\r\n    this.materialCount = 0;\r\n  }\r\n  clear(){\r\n    this.name = \"\";\r\n    this.price = \"\";\r\n    this.kdv = \"\";\r\n    this.prodCount = 1;\r\n    this.group = \"\";\r\n    this.photo = \"\";\r\n    this.materialCount = 0;\r\n  }\r\n  editProduct(name, price, kdv, group, photo){\r\n    this.db.database.ref('/products/'+this.keys).update({name:name, price:price,kdv:kdv,kdvPrice:parseFloat(price)*(1+parseFloat(kdv)/100),cost:this.cost,group:group, photo:photo,materialCount:this.materialCount,prodCount:this.prodCount,material:this.materialsList});\r\n    this.largeModal.hide();\r\n    this.name = \"\";\r\n    this.price = \"\";\r\n    this.prodCount = 1;\r\n    this.kdv = \"\";\r\n    this.group = \"\";\r\n    this.photo = \"\";\r\n    this.materialCount = 0;\r\n  }\r\n  selectMaterial(i,arr){\r\n    this.cost = 0;\r\n    const [id,name] = arr.split(\"***\");\r\n    this.materialsList[i].id = id;\r\n    this.materialsList[i].name = name;\r\n    this.materialsList.forEach(x=>{\r\n      this.products.forEach(element => {\r\n        if(element.key == x.id){\r\n          this.cost += x.amount * element.payload.val().cost;\r\n        }        \r\n      });\r\n    });\r\n  }\r\n  costUpdate(){\r\n    this.cost = 0;\r\n    this.materialsList.forEach(x=>{\r\n      this.products.forEach(element => {\r\n        if(element.key == x.id){\r\n          this.cost += x.amount * element.payload.val().cost;\r\n        }        \r\n      });\r\n    });\r\n  }\r\n  cancel(){\r\n    this.name = \"\";\r\n    this.price = \"\";\r\n    this.kdv = \"\";\r\n    this.prodCount = 1;\r\n    this.group = \"\";\r\n    this.photo = \"\";\r\n    this.materialCount = 0;\r\n    this.largeModal.hide();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe2 implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ProductsComponent } from './products.component';\r\nimport { stockRoutingModule } from './products-routing.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { searchPipe2 } from './pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    stockRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    CommonModule,\r\n    ModalModule,\r\n  ],\r\n  declarations: [ \r\n    ProductsComponent,\r\n    searchPipe2,\r\n  ]\r\n})\r\nexport class ProductsModule { \r\n\r\n}\r\n"]}