{"version":3,"sources":["webpack:///src/app/views/dashboard/Dashboard.component.html","webpack:///src/app/views/dashboard/dashboard.module.ts","webpack:///src/app/views/dashboard/pipe.ts","webpack:///src/app/views/dashboard/dashboard-routing.module.ts","webpack:///src/app/views/dashboard/dashboard.component.ts"],"names":["DashboardModule","imports","forRoot","declarations","searchPipe","value","args","toLowerCase","filter","item","JSON","stringify","includes","name","routes","path","component","data","title","DashboardRoutingModule","forChild","exports","DashboardComponent","db","excel","auth","router","statistics","totalIncome","totalSell","totalCost","stock","onAuthStateChanged","user","email","search","navigate","list","valueChanges","subscribe","i","reverse","forEach","element","kdvPrice","cost","count","val","toLocaleLowerCase","tableName","exportAsExcelFile","console","log","dataName","remove","template"],"mappings":"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","file":"views-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Satılan Ürünler\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-prepend\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n                </span>\\n                <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"sellProdSearch\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"sellProdSearch\\\">\\n              </div>\\n                </div>\\n            <div class=\\\"col-12 mt-4\\\">\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"sellProd\\\">\\n                <thead>\\n                  <tr>\\n                    <th>İşlem</th>\\n                    <th>Ürün adı</th>\\n                    <th>Grup</th>\\n                    <th>Fiyat</th>\\n                    <th>Maliyet</th>\\n                    <th>Adet</th>\\n                    <th>Toplam satış</th>\\n                    <th>Kâr</th>\\n                    <th>Tarih</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let item of statistics | filter:sellProdSearch\\\">\\n                    <td>{{ item.process }}</td>\\n                    <td>{{ item.name }}</td>\\n                    <td>{{ item.group }}</td>\\n                    <td>{{ item.kdvPrice | number : '.2-2' }}₺</td>\\n                    <td>{{ item.cost | number : '.2-2' }}₺</td>\\n                    <td>{{ item.count }}</td>\\n                    <td>{{ item.kdvPrice * item.count | number : '.2-2' }}₺</td>\\n                    <td>{{ (item.kdvPrice - item.cost) * item.count | number : '.2-2' }}₺</td>\\n                    <td>{{ item.date }}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">Toplam Satış: {{ totalSell | number : '.2-2' }}₺ <br> Toplam Kâr: {{ totalIncome | number : '.2-2' }}₺</div>\\n            <div class=\\\"col-6 float-right\\\"><button (click)=\\\"clearAndExport('statistics')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-align-justify\\\"></i> Eklenen Stoklar\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"input-group\\\">\\n              <span class=\\\"input-group-prepend\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n              </span>\\n              <input type=\\\"text\\\" id=\\\"input1-group2\\\"  [(ngModel)]=\\\"search\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\">\\n            </div>\\n              </div>\\n          <div class=\\\"col-12 mt-4\\\">\\n            <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"stockProd\\\">\\n              <thead>\\n                <tr>\\n                  <th>İşlem</th>\\n                  <th>Ürün adı</th>\\n                  <th>Grup</th>\\n                  <th>Maliyet</th>\\n                  <th>Adet</th>\\n                  <th>Toplam maliyet</th>\\n                  <th>Tarih</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of stock | filter:search\\\">\\n                  <td>{{ item.process }}</td>\\n                  <td>{{ item.name }}</td>\\n                  <td>{{ item.group }}</td>\\n                  <td>{{ item.cost | number : '.2-2' }}₺</td>\\n                  <td>{{ item.stock }}</td>\\n                  <td>{{ item.cost * item.stock | number : '.2-2' }}₺</td>\\n                  <td>{{ item.date }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">Stok eklenen ürün maliyeti toplamı: {{ totalCost | number : '.2-2' }}₺</div>\\n          <div class=\\\"col-6\\\"><button (click)=\\\"clearAndExport('stock')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"cord-body\\\">\\n        <div class=\\\"alert alert-secondary\\\" style=\\\"margin-bottom: 0px;\\\" role=\\\"alert\\\">\\n          <div>Genel durum : <span [ngStyle]=\\\"{'color': totalIncome - totalCost > 0? 'green' : 'red'}\\\">{{ totalSell - totalCost | number : '.2-2' }}₺</span></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from \"@angular/common\";\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { searchPipe } from './pipe';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    DashboardRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    CommonModule,\n\n  ],\n  declarations: [ \n    DashboardComponent,\n    searchPipe,\n  ]\n})\nexport class DashboardModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ExcelService } from '../../shared/services/excel.services';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: 'Dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n  statistics = [];\n  totalIncome = 0;\n  totalSell = 0;\n  totalCost = 0;\n  stock = [];\n  user;\n  sellProdSearch;\n  search;\n  filter(value){\n    return value.filter((val) => {\n      return val.toLocaleLowerCase().includes(value);\n    })\n  }\n\n  constructor(private db:AngularFireDatabase,private excel:ExcelService,auth:AngularFireAuth,private router:Router){\n    auth.onAuthStateChanged((user)=>{\n      if(user){\n        this.user = user.email;\n        if(this.user.search(\"user\") != -1){\n          router.navigate([\"/stock\"]);\n        }\n      }\n    })\n\n     db.list('/statistics/sold').valueChanges().subscribe(i => {\n      this.statistics = i.reverse();\n      this.statistics.forEach(element => {\n        this.totalIncome += (element.kdvPrice - element.cost) * element.count;\n        this.totalSell += element.kdvPrice * element.count;\n      });\n    });\n    db.list('/statistics/stock').valueChanges().subscribe(i => {\n      this.stock = i.reverse();\n      this.stock.forEach(element => {\n        this.totalCost += element.cost * element.stock;\n      });\n    });\n  }\n  print(tableName):void{\n    if(tableName=\"statistics\"){\n      this.excel.exportAsExcelFile(this.statistics,\"istatistik\");\n      console.log(\"istatistik yazdır\");\n    }\n    else{\n      this.excel.exportAsExcelFile(this.stock,\"stock\");\n      console.log(\"stok yazdır\");\n    }\n  }\n  clearAndExport(dataName){\n    if(dataName == \"statistics\"){\n      this.excel.exportAsExcelFile(this.statistics,\"statistics\");\n      this.db.list(\"statistics\").remove();\n      this.totalIncome = 0;\n    }\n    else{\n      this.excel.exportAsExcelFile(this.stock,\"stock\");    \n      this.db.list(\"stock\").remove();\n      this.totalCost = 0;\n    }\n  }\n  ngOnInit(){}\n}\n"]}