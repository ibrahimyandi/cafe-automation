{"version":3,"sources":["webpack:///src/app/views/dashboard/Dashboard.component.html","webpack:///src/app/views/dashboard/dashboard.module.ts","webpack:///src/app/views/dashboard/pipe.ts","webpack:///src/app/views/dashboard/dashboard-routing.module.ts","webpack:///src/app/views/dashboard/dashboard.component.ts"],"names":["DashboardModule","imports","forRoot","declarations","searchPipe","value","args","toLowerCase","filter","item","JSON","stringify","includes","name","routes","path","component","data","title","DashboardRoutingModule","forChild","exports","DashboardComponent","db","excel","auth","router","statistics","totalIncome","totalSell","totalCost","stock","min1","max1","min2","max2","stockLength","soldLength","onAuthStateChanged","user","email","search","navigate","list","valueChanges","subscribe","i","reverse","Math","ceil","length","forEach","element","kdvPrice","cost","count","val","console","log","toLocaleLowerCase","x","sum","tableName","exportAsExcelFile","dataName","remove","template"],"mappings":"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","file":"views-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Satılan Ürünler\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <span class=\\\"input-group-prepend\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\r\\n                </span>\\r\\n                <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"sellProdSearch\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"sellProdSearch\\\" (ngModelChange)=\\\"resetList(1)\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\"></div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <button class=\\\"btn btn-primary float-right btn-block\\\" type=\\\"submit\\\" (click)=\\\"allList(1)\\\">Tümünü listele</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-12 mt-4\\\">\\r\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"sellProd\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>İşlem</th>\\r\\n                    <th>Ürün adı</th>\\r\\n                    <th>Grup</th>\\r\\n                    <th>Fiyat</th>\\r\\n                    <th>Maliyet</th>\\r\\n                    <th>Adet</th>\\r\\n                    <th>Toplam satış</th>\\r\\n                    <th>Kâr</th>\\r\\n                    <th>Tarih</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of statistics | filter:sellProdSearch | slice:min1:max1\\\">\\r\\n                    <td>{{ item.process }}</td>\\r\\n                    <td>{{ item.name }}</td>\\r\\n                    <td>{{ item.group }}</td>\\r\\n                    <td>{{ item.kdvPrice | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ item.cost | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ item.count }}</td>\\r\\n                    <td>{{ item.kdvPrice * item.count | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ (item.kdvPrice - item.cost) * item.count | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ item.date }}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n              <nav aria-label=\\\"...\\\" class=\\\"float-right\\\">\\r\\n                <ul class=\\\"pagination pagination-sm\\\">\\r\\n                  <li class=\\\"page-item\\\" *ngFor=\\\"let item of [].constructor(soldLength); let i = index\\\">\\r\\n                    <span (click)=\\\"pagination(1, i)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\">{{i+1}}</span>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </nav>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">Toplam Satış: {{ totalSell | number : '.2-2' }} ₺ <br> Toplam Kâr: {{ totalIncome | number : '.2-2' }} ₺</div>\\r\\n            <div class=\\\"col-4\\\">Listelenen Satış: {{ listSold(statistics | filter:sellProdSearch | slice:min1:max1) | number : '.2-2' }} ₺ <br> Listelenen Kâr: {{ listProfit(statistics | filter:sellProdSearch) | number : '.2-2' }} ₺</div>\\r\\n            <div class=\\\"col-4 float-right\\\"><button (click)=\\\"clearAndExport('statistics')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <i class=\\\"fa fa-align-justify\\\"></i> Eklenen Stoklar\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <span class=\\\"input-group-prepend\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\r\\n              </span>\\r\\n              <input type=\\\"text\\\" id=\\\"input1-group2\\\"  [(ngModel)]=\\\"search\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\"></div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <button class=\\\"btn btn-primary float-right btn-block\\\" type=\\\"submit\\\" (click)=\\\"allList(2)\\\">Tümünü listele</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 mt-4\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"stockProd\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>İşlem</th>\\r\\n                  <th>Ürün adı</th>\\r\\n                  <th>Grup</th>\\r\\n                  <th>Maliyet</th>\\r\\n                  <th>Adet</th>\\r\\n                  <th>Toplam maliyet</th>\\r\\n                  <th>Tarih</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of stock | filter:search | slice:min2:max2\\\">\\r\\n                  <td>{{ item.process }}</td>\\r\\n                  <td>{{ item.name }}</td>\\r\\n                  <td>{{ item.group }}</td>\\r\\n                  <td>{{ item.cost | number : '.2-2' }} ₺</td>\\r\\n                  <td>{{ item.stock }}</td>\\r\\n                  <td>{{ item.cost * item.stock | number : '.2-2' }} ₺</td>\\r\\n                  <td>{{ item.date }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <nav aria-label=\\\"...\\\" class=\\\"float-right\\\">\\r\\n              <ul class=\\\"pagination pagination-sm\\\">\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let item of [].constructor(stockLength); let i = index\\\">\\r\\n                  <span (click)=\\\"pagination(2, i)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\">{{i+1}}</span>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-4\\\">Toplam maliyet: {{ totalCost | number : '.2-2' }} ₺</div>\\r\\n          <div class=\\\"col-4\\\">Listelenen maliyet: {{ listCost(stock | filter:search | slice:min2:max2) | number : '.2-2' }} ₺</div>\\r\\n          <div class=\\\"col-4\\\"><button (click)=\\\"clearAndExport('stock')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"cord-body\\\">\\r\\n        <div class=\\\"alert alert-secondary\\\" style=\\\"margin-bottom: 0px;\\\" role=\\\"alert\\\">\\r\\n          <div>Genel durum : <span [ngStyle]=\\\"{'color': totalIncome - totalCost > 0? 'green' : 'red'}\\\">{{ totalSell - totalCost | number : '.2-2' }} ₺</span></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { searchPipe } from './pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    DashboardRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    CommonModule,\r\n\r\n  ],\r\n  declarations: [ \r\n    DashboardComponent,\r\n    searchPipe,\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      title: 'Dashboard'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { ExcelService } from '../../shared/services/excel.services';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: 'Dashboard.component.html'\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  statistics = [];\r\n  totalIncome = 0;\r\n  totalSell = 0;\r\n  totalCost = 0;\r\n  stock = [];\r\n  min1 = 0;\r\n  max1 = 25;\r\n  min2 = 0;\r\n  max2 = 25;\r\n  user;\r\n  stockLength = 0;\r\n  soldLength = 0;\r\n  sellProdSearch;\r\n  search;\r\n  filter(value){\r\n    return value.filter((val) => {\r\n      console.log(val);\r\n      return val.toLocaleLowerCase().includes(value);\r\n    })\r\n    \r\n  }\r\n\r\n  constructor(private db:AngularFireDatabase,private excel:ExcelService,auth:AngularFireAuth,private router:Router){\r\n    auth.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        this.user = user.email;\r\n        if(this.user.search(\"admin\") == -1){\r\n          router.navigate([\"/stock\"]);\r\n        }\r\n      }\r\n    })\r\n\r\n    db.list('/statistics/sold').valueChanges().subscribe(i => {\r\n      this.statistics = i.reverse();\r\n      this.soldLength = Math.ceil(this.statistics.length/25);\r\n      this.statistics.forEach(element => {\r\n        this.totalIncome += (element.kdvPrice - element.cost) * element.count;\r\n        this.totalSell += element.kdvPrice * element.count;\r\n      });\r\n    });\r\n    db.list('/statistics/stock').valueChanges().subscribe(i => {\r\n      this.stock = i.reverse();\r\n      this.stockLength = Math.ceil(this.stock.length/25);\r\n      this.stock.forEach(element => {\r\n        this.totalCost += element.cost * element.stock;\r\n      });\r\n    });\r\n  }\r\n  listSold(x){\r\n    let sum = 0;\r\n    x.forEach(element => {\r\n      sum += element.kdvPrice * element.count;\r\n    });\r\n    return sum;\r\n  }\r\n  listProfit(x){\r\n    let sum = 0;\r\n    x.forEach(element => {\r\n      sum += element.kdvPrice * element.count - element.cost * element.count;\r\n    });\r\n    return sum;\r\n  }\r\n  listCost(x){\r\n    let sum = 0;\r\n    x.forEach(element => {\r\n      sum += element.cost * element.stock;\r\n    });\r\n    return sum;\r\n  }\r\n  \r\n  pagination(x,i){\r\n    if(x == 1){\r\n      this.min1 = i * 25;\r\n      this.max1 = i * 25 + 25; \r\n    }\r\n    else if(x == 2){\r\n      this.min2 = i * 25;\r\n      this.max2 = i * 25 + 25; \r\n    }\r\n  }\r\n  allList(x){\r\n    if(x == 1){\r\n      this.min1 = 0;\r\n      this.max1 = this.statistics.length;\r\n    }\r\n    else if(x == 2){\r\n      this.min2 = 0;\r\n      this.max2 = this.stock.length;\r\n    }\r\n  }\r\n  print(tableName):void{\r\n    if(tableName=\"statistics\"){\r\n      this.excel.exportAsExcelFile(this.statistics,\"istatistik\");\r\n      console.log(\"istatistik yazdır\");\r\n    }\r\n    else{\r\n      this.excel.exportAsExcelFile(this.stock,\"stock\");\r\n      console.log(\"stok yazdır\");\r\n    }\r\n  }\r\n  clearAndExport(dataName){\r\n    if(dataName == \"statistics\"){\r\n      this.excel.exportAsExcelFile(this.statistics,\"statistics\");\r\n      this.db.list(\"statistics\").remove();\r\n      this.totalIncome = 0;\r\n    }\r\n    else{\r\n      this.excel.exportAsExcelFile(this.stock,\"stock\");    \r\n      this.db.list(\"stock\").remove();\r\n      this.totalCost = 0;\r\n    }\r\n  }\r\n  ngOnInit(){}\r\n}\r\n"]}