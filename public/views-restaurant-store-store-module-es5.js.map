{"version":3,"sources":["webpack:///src/app/views/restaurant/store/pipe.ts","webpack:///src/app/views/restaurant/store/store.component.html","webpack:///src/app/views/restaurant/store/store-routing.module.ts","webpack:///src/app/views/restaurant/store/store.module.ts","webpack:///src/app/views/restaurant/store/store.component.ts"],"names":["searchPipe2","value","args","toLowerCase","filter","item","JSON","stringify","includes","name","routes","path","component","data","title","storeRoutingModule","imports","forChild","exports","StoreModule","forRoot","declarations","StoreComponent","db","stocks","total","modalStock","stock","materialCount","stockDetail","product","oldCost","prodCount","materialsList","modalDetail","list","valueChanges","subscribe","i","groups","snapshotChanges","forEach","products","key","element","group","payload","val","photo","kdv","kdvPrice","cost","restaurant1Stock","restaurant1Stocks","material","keys","date","Date","dateString","toLocaleString","database","ref","update","length","average","amount","set","push","process","x","id","console","log","largeModal","hide","stockDepo","largeModal2","selector","template"],"mappings":"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","file":"views-restaurant-store-store-module-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe2 implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <i class=\\\"fa fa-align-justify\\\"></i> STOK LİSTESİ\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"input-group\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n                  </span>\\n                  <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"search\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 mt-4\\\">\\n                <table class=\\\"table table-bordered table-striped table-sm\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Ürün adı</th>\\n                      <th>Grup</th>\\n                      <th>Maliyet (KDV)</th>\\n                      <th>Depo adet</th>\\n                      <th>Kafe adet</th>\\n                      <th>Ekleme ve iade işlemleri</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of products | filter:search\\\">\\n                      <td>{{ item.payload.val().name }}</td>\\n                      <td>{{ item.payload.val().group }}</td>\\n                      <td>{{ item.payload.val().cost | number : '.2-2'  }}₺</td>\\n                      <td>{{ item.payload.val().stock | number : '.2-2'  }}</td>\\n                      <td>{{ item.payload.val().restaurant1Stock | number : '.2-2'  }}</td>\\n                      <td>\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-6\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal.show()\\\">Stok ekle</button>\\n                          </div>\\n                          <div class=\\\"col-6\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal2.show()\\\">İade et</button>\\n                          </div>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div bsModal #largeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Stok ekleme işlemi</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <input disabled [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\n                    <span class=\\\"help-block\\\"></span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">₺</span>\\n                      </div>\\n                      <input disabled [(ngModel)]=\\\"cost\\\" name=\\\"cost\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.cost}}\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">.00</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <select disabled id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\n                      <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\n                  <div class=\\\"col-md-6\\\">\\n                    <input disabled [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n                  </div>\\n                </div>\\n                <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Malzeme adı</th>\\n                      <th>Kullanılan miktar</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\n                      <td>{{ material.name }}</td>\\n                      <td>{{ material.amount }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Eklenecek stok sayısı</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <input [(ngModel)]=\\\"modalStock\\\" name=\\\"modalStock\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"Şuanki stok: {{this.restaurant1Stocks}}\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">adet</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"result == 0\\\">\\n                  <div class=\\\"alert alert-warning col-12\\\" role=\\\"alert\\\">\\n                    Kullanılan malzeme stoğu bu ürünü üretmek için yeterli değildir.\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"largeModal.hide()\\\">Vazgeç</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addStock(modalStock)\\\" [disabled]=\\\"(stocks < modalStock || modalStock <= 0)? true:false\\\">Değişiklikleri kaydet</button>\\n        </div>\\n      </div><!-- /.modal-content -->\\n    </div><!-- /.modal-dialog -->\\n  </div><!-- /.modal -->\\n  <div bsModal #largeModal2=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Stok iade işlemi</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal2.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <input disabled [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\n                    <span class=\\\"help-block\\\"></span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <select disabled id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\n                      <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\n                  <div class=\\\"col-md-6\\\">\\n                    <input disabled [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n                  </div>\\n                </div>\\n                <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Malzeme adı</th>\\n                      <th>Kullanılan miktar</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\n                      <td>{{ material.name }}</td>\\n                      <td>{{ material.amount }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">İade edilecek stok sayısı</label>\\n                  <div class=\\\"controls col-md-9\\\">\\n                    <div class=\\\"input-prepend input-group\\\">\\n                      <input [(ngModel)]=\\\"stock\\\" name=\\\"stock\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"Şuanki stok: {{this.restaurant1Stocks}}\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">adet</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"largeModal2.hide()\\\">Vazgeç</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"returnStock(stock)\\\" [disabled]=\\\"(stock > this.restaurant1Stocks || stock <= 0)? true:false\\\">Değişiklikleri kaydet</button>\\n        </div>\\n      </div><!-- /.modal-content -->\\n    </div><!-- /.modal-dialog -->\\n  </div><!-- /.modal -->\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StoreComponent } from './store.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StoreComponent,\n    data: {\n      title: 'store'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class storeRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from \"@angular/common\";\nimport { StoreComponent } from './store.component';\nimport { storeRoutingModule } from './store-routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { searchPipe2 } from './pipe';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    storeRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    CommonModule,\n    ModalModule,\n  ],\n  declarations: [ \n    StoreComponent,\n    searchPipe2,\n  ]\n})\nexport class StoreModule { \n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n})\nexport class StoreComponent implements OnInit {\n  @ViewChild('largeModal') public largeModal: ModalDirective;\n  @ViewChild('largeModal2') public largeModal2: ModalDirective;\n  search;\n  group;\n  name;\n  photo;\n  kdvPrice;\n  restaurant1Stocks;\n  stocks = 0;\n  total = 0;\n  keys;\n  modalStock = null;\n  stock = null;\n  groups;\n  materialCount = 0;\n  products;\n  kdv;\n  cost;\n  stockDetail = [];\n  product = []\n  oldCost = 0;\n  prodCount = 1;\n  stockDepo;\n  materialsList = [];\n  modalDetail = [];\n  dateString;\n  constructor(private db:AngularFireDatabase){\n    db.list('/groups').valueChanges().subscribe(i => {\n      this.groups = i;\n    });\n    db.list('/products').snapshotChanges().forEach(i=>{\n      this.products = i;\n    });\n  }\n  ngOnInit(){}\n  modalOpen(key){\n    this.products.forEach(element => {\n      if(key == element.key){\n        this.product = element;\n        this.group = element.payload.val().group;\n        this.name = element.payload.val().name;\n        this.photo = element.payload.val().photo;\n        this.kdv = element.payload.val().kdv;\n        this.kdvPrice = element.payload.val().kdvPrice;\n        this.stockDetail = element.payload.val().stockDetail;\n        this.cost = element.payload.val().cost;\n        this.oldCost = element.payload.val().cost;\n        this.stocks = element.payload.val().stock;\n        this.stock = element.payload.val().restaurant1Stock;\n        this.restaurant1Stocks = element.payload.val().restaurant1Stock;\n        this.prodCount = element.payload.val().prodCount;\n        this.materialsList = element.payload.val().material;\n        this.materialCount = element.payload.val().materialCount;\n      }\n    });\n    this.keys = key;\n  }\n\n  addStock(stock){\n    const date = new Date();\n    this.dateString = date.toLocaleString('tr-TR');\n    this.db.database.ref('/products/'+this.keys).update({stock:this.stocks - stock});\n    if(this.stockDetail.length > 0){\n      var average = 0;\n      var amount = 0;\n      this.stockDetail.forEach(element => {\n        average += element.cost * element.stock;\n        amount += element.stock;\n      });\n      average = average / amount;\n      this.db.database.ref(\"/products/\"+this.keys).update({cost: average});\n    }\n    else if(this.stockDetail.length == 1){\n      this.db.database.ref(\"/products/\"+this.keys).update({cost: this.stockDetail[0].cost});\n    }\n    this.db.database.ref('/products/'+this.keys+'/stockDetail').set(this.stockDetail);\n    this.db.database.ref('/products/'+this.keys).update({restaurant1Stock:this.restaurant1Stocks + stock});\n    this.db.list(\"/statistics/stock\").push({process:\"Restoran 1 aktarma\", name:this.name,group:this.group,date:this.dateString,stock:stock,cost:0});    \n    this.products.forEach(element => {\n      if(element.payload.val().materialCount > 0){\n        element.payload.val().material.forEach(x => {\n          if(this.keys == x.id){\n            console.log(element.payload.val().cost, this.cost, average);\n            this.db.database.ref(\"/products/\"+ element.key).update({cost: element.payload.val().cost - this.oldCost + average});\n            return;\n          }\n        });\n      }\n    });\n\n    this.largeModal.hide();\n    this.total = 0;\n    this.stock = null;\n    this.stocks = 0;\n    this.restaurant1Stocks = 0;\n  }\n  returnStock(stock){\n    const date = new Date();\n    this.dateString = date.toLocaleString('tr-TR');\n    this.products.forEach(element => {\n      if(this.keys == element.key){\n      this.name = element.payload.val().name;\n      this.group = element.payload.val().group;\n      this.photo = element.payload.val().photo;\n      this.restaurant1Stocks = element.payload.val().restaurant1Stock;\n      this.stockDepo = element.payload.val().stock;\n      }\n    });\n    //this.db.database.ref('/products/'+this.keys).update({stock:this.stock + stock});\n    this.db.database.ref('/products/'+this.keys).update({restaurant1Stock:this.restaurant1Stocks - stock});\n    this.restaurant1Stocks = 0;\n    //this.stock = 0;\n    this.largeModal2.hide();\n    this.db.list(\"/statistics/stock\").push({process:\"Restoran 1 iade\",name:this.name,group:this.group,date:this.dateString,stock:stock,cost:0});\n  }\n}\n"]}