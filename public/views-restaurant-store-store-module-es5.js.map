{"version":3,"sources":["webpack:///src/app/views/restaurant/store/pipe.ts","webpack:///src/app/views/restaurant/store/store.component.html","webpack:///src/app/views/restaurant/store/store-routing.module.ts","webpack:///src/app/views/restaurant/store/store.module.ts","webpack:///src/app/views/restaurant/store/store.component.ts"],"names":["searchPipe2","value","args","toLowerCase","filter","item","JSON","stringify","includes","name","routes","path","component","data","title","storeRoutingModule","imports","forChild","exports","StoreModule","forRoot","declarations","StoreComponent","db","auth","router","stocks","total","modalStock","stock","materialCount","stockDetail","product","oldCost","prodCount","materialsList","modalDetail","onAuthStateChanged","user","email","navigate","list","valueChanges","subscribe","i","groups","snapshotChanges","forEach","products","key","element","group","payload","val","photo","kdv","kdvPrice","cost","restaurant1Stock","restaurant1Stocks","material","keys","date","Date","dateString","toLocaleString","database","ref","update","length","average","amount","set","push","process","x","id","largeModal","hide","stockDepo","largeModal2","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAMaA,WAAW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iBACpB,mBAAUC,KAAV,EAAsBC,IAAtB,EAAgC;AAE5B,gBAAG,CAACD,KAAJ,EAAU,OAAO,IAAP;AACV,gBAAG,CAACC,IAAJ,EAAS,OAAOD,KAAP;AAETC,gBAAI,GAAGA,IAAI,CAACC,WAAL,EAAP;AAEA,mBAAOF,KAAK,CAACG,MAAN,CAAa,UAASC,IAAT,EAAa;AAC7B,qBAAOC,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqBF,WAArB,GAAmCK,QAAnC,CAA4CN,IAA5C,CAAP;AACH,aAFM,CAAP;AAGH;AAXmB;;AAAA;AAAA,S;;AAAXF,iBAAW,6DAJvB,2DAAK;AACFS,YAAI,EAAE;AADJ,OAAL,CAIuB,GAAXT,WAAW,CAAX;;;;;;;;;;;;;;;;ACNb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMU,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,+DAFb;AAGEC,YAAI,EAAE;AACJC,eAAK,EAAE;AADH;AAHR,OADqB,CAAvB;;UAcaC,kBAAkB;AAAA;AAAA,Q;;AAAlBA,wBAAkB,6DAJ9B,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI8B,GAAlBH,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAI,WAAW;AAAA;AAAA,Q;;AAAXA,iBAAW,6DAfvB,+DAAS;AACRH,eAAO,EAAE,CACP,0DADO,EAEP,wEAFO,EAGP,uDAHO,EAIP,uEAJO,EAKP,oEAAcI,OAAd,EALO,EAMP,4DANO,EAOP,+DAPO,CADD;AAURC,oBAAY,EAAE,CACZ,+DADY,EAEZ,kDAFY;AAVN,OAAT,CAeuB,GAAXF,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChBAG,cAAc;AA2BzB,gCAAoBC,EAApB,EAA2CC,IAA3C,EAAwEC,MAAxE,EAAqF;AAAA;;AAAA;;AAAjE,eAAAF,EAAA,GAAAA,EAAA;AAAoD,eAAAE,MAAA,GAAAA,MAAA;AAlBxE,eAAAC,MAAA,GAAS,CAAT;AACA,eAAAC,KAAA,GAAQ,CAAR;AAEA,eAAAC,UAAA,GAAa,IAAb;AACA,eAAAC,KAAA,GAAQ,IAAR;AAEA,eAAAC,aAAA,GAAgB,CAAhB;AAIA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,OAAA,GAAU,CAAV;AACA,eAAAC,SAAA,GAAY,CAAZ;AAEA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,WAAA,GAAc,EAAd;AAGEZ,cAAI,CAACa,kBAAL,CAAwB,UAACC,IAAD,EAAQ;AAC9B,gBAAGA,IAAH,EAAQ;AACN,kBAAG,CAACA,IAAI,CAACC,KAAL,IAAc,eAAd,IAAiCD,IAAI,CAACC,KAAL,IAAc,eAAhD,KAAoE,KAAvE,EAA6E;AAC3Ed,sBAAM,CAACe,QAAP,CAAgB,CAAC,QAAD,CAAhB;AACD;AACF;AACF,WAND;AAOAjB,YAAE,CAACkB,IAAH,CAAQ,SAAR,EAAmBC,YAAnB,GAAkCC,SAAlC,CAA4C,UAAAC,CAAC,EAAI;AAC/C,iBAAI,CAACC,MAAL,GAAcD,CAAd;AACD,WAFD;AAGArB,YAAE,CAACkB,IAAH,CAAQ,WAAR,EAAqBK,eAArB,GAAuCC,OAAvC,CAA+C,UAAAH,CAAC,EAAE;AAChD,iBAAI,CAACI,QAAL,GAAgBJ,CAAhB;AACD,WAFD;AAGD;;AAzCwB;AAAA;AAAA,iBA0CzB,oBAAQ,CAAI;AA1Ca;AAAA;AAAA,iBA2CzB,mBAAUK,GAAV,EAAa;AAAA;;AACX,iBAAKD,QAAL,CAAcD,OAAd,CAAsB,UAAAG,OAAO,EAAI;AAC/B,kBAAGD,GAAG,IAAIC,OAAO,CAACD,GAAlB,EAAsB;AACpB,sBAAI,CAACjB,OAAL,GAAekB,OAAf;AACA,sBAAI,CAACC,KAAL,GAAaD,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBF,KAAnC;AACA,sBAAI,CAAC1C,IAAL,GAAYyC,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsB5C,IAAlC;AACA,sBAAI,CAAC6C,KAAL,GAAaJ,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBC,KAAnC;AACA,sBAAI,CAACC,GAAL,GAAWL,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBE,GAAjC;AACA,sBAAI,CAACC,QAAL,GAAgBN,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBG,QAAtC;AACA,sBAAI,CAACzB,WAAL,GAAmBmB,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBtB,WAAzC;AACA,sBAAI,CAAC0B,IAAL,GAAYP,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBI,IAAlC;AACA,sBAAI,CAACxB,OAAL,GAAeiB,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBI,IAArC;AACA,sBAAI,CAAC/B,MAAL,GAAcwB,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBxB,KAApC;AACA,sBAAI,CAACA,KAAL,GAAaqB,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBK,gBAAnC;AACA,sBAAI,CAACC,iBAAL,GAAyBT,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBK,gBAA/C;AACA,sBAAI,CAACxB,SAAL,GAAiBgB,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBnB,SAAvC;AACA,sBAAI,CAACC,aAAL,GAAqBe,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBO,QAA3C;AACA,sBAAI,CAAC9B,aAAL,GAAqBoB,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBvB,aAA3C;AACD;AACF,aAlBD;AAmBA,iBAAK+B,IAAL,GAAYZ,GAAZ;AACD;AAhEwB;AAAA;AAAA,iBAkEzB,kBAASpB,KAAT,EAAc;AAAA;;AACZ,gBAAMiC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,iBAAKC,UAAL,GAAkBF,IAAI,CAACG,cAAL,CAAoB,OAApB,CAAlB;AACA,iBAAK1C,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAa,KAAKN,IAAvC,EAA6CO,MAA7C,CAAoD;AAACvC,mBAAK,EAAC,KAAKH,MAAL,GAAcG;AAArB,aAApD;;AACA,gBAAG,KAAKE,WAAL,CAAiBsC,MAAjB,GAA0B,CAA7B,EAA+B;AAC7B,kBAAIC,OAAO,GAAG,CAAd;AACA,kBAAIC,MAAM,GAAG,CAAb;AACA,mBAAKxC,WAAL,CAAiBgB,OAAjB,CAAyB,UAAAG,OAAO,EAAI;AAClCoB,uBAAO,IAAIpB,OAAO,CAACO,IAAR,GAAeP,OAAO,CAACrB,KAAlC;AACA0C,sBAAM,IAAIrB,OAAO,CAACrB,KAAlB;AACD,eAHD;AAIAyC,qBAAO,GAAGA,OAAO,GAAGC,MAApB;AACA,mBAAKhD,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAa,KAAKN,IAAvC,EAA6CO,MAA7C,CAAoD;AAACX,oBAAI,EAAEa;AAAP,eAApD;AACD,aATD,MAUK,IAAG,KAAKvC,WAAL,CAAiBsC,MAAjB,IAA2B,CAA9B,EAAgC;AACnC,mBAAK9C,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAa,KAAKN,IAAvC,EAA6CO,MAA7C,CAAoD;AAACX,oBAAI,EAAE,KAAK1B,WAAL,CAAiB,CAAjB,EAAoB0B;AAA3B,eAApD;AACD;;AACD,iBAAKlC,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAa,KAAKN,IAAlB,GAAuB,cAA5C,EAA4DW,GAA5D,CAAgE,KAAKzC,WAArE;AACA,iBAAKR,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAa,KAAKN,IAAvC,EAA6CO,MAA7C,CAAoD;AAACV,8BAAgB,EAAC,KAAKC,iBAAL,GAAyB9B;AAA3C,aAApD;AACA,iBAAKN,EAAL,CAAQkB,IAAR,CAAa,mBAAb,EAAkCgC,IAAlC,CAAuC;AAACC,qBAAO,EAAC,oBAAT;AAA+BjE,kBAAI,EAAC,KAAKA,IAAzC;AAA8C0C,mBAAK,EAAC,KAAKA,KAAzD;AAA+DW,kBAAI,EAAC,KAAKE,UAAzE;AAAoFnC,mBAAK,EAACA,KAA1F;AAAgG4B,kBAAI,EAAC;AAArG,aAAvC;AACA,iBAAKT,QAAL,CAAcD,OAAd,CAAsB,UAAAG,OAAO,EAAI;AAC/B,kBAAGA,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBvB,aAAtB,GAAsC,CAAzC,EAA2C;AACzCoB,uBAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBO,QAAtB,CAA+Bb,OAA/B,CAAuC,UAAA4B,CAAC,EAAI;AAC1C,sBAAG,MAAI,CAACd,IAAL,IAAac,CAAC,CAACC,EAAlB,EAAqB;AACnB,0BAAI,CAACrD,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAcjB,OAAO,CAACD,GAA3C,EAAgDmB,MAAhD,CAAuD;AAACX,0BAAI,EAAEP,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBI,IAAtB,GAA6B,MAAI,CAACxB,OAAlC,GAA4CqC;AAAnD,qBAAvD;;AACA;AACD;AACF,iBALD;AAMD;AACF,aATD;AAWA,iBAAKO,UAAL,CAAgBC,IAAhB;AACA,iBAAKnD,KAAL,GAAa,CAAb;AACA,iBAAKE,KAAL,GAAa,IAAb;AACA,iBAAKH,MAAL,GAAc,CAAd;AACA,iBAAKiC,iBAAL,GAAyB,CAAzB;AACD;AAtGwB;AAAA;AAAA,iBAuGzB,qBAAY9B,KAAZ,EAAiB;AAAA;;AACf,gBAAMiC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,iBAAKC,UAAL,GAAkBF,IAAI,CAACG,cAAL,CAAoB,OAApB,CAAlB;AACA,iBAAKjB,QAAL,CAAcD,OAAd,CAAsB,UAAAG,OAAO,EAAI;AAC/B,kBAAG,MAAI,CAACW,IAAL,IAAaX,OAAO,CAACD,GAAxB,EAA4B;AAC5B,sBAAI,CAACxC,IAAL,GAAYyC,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsB5C,IAAlC;AACA,sBAAI,CAAC0C,KAAL,GAAaD,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBF,KAAnC;AACA,sBAAI,CAACG,KAAL,GAAaJ,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBC,KAAnC;AACA,sBAAI,CAACK,iBAAL,GAAyBT,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBK,gBAA/C;AACA,sBAAI,CAACqB,SAAL,GAAiB7B,OAAO,CAACE,OAAR,CAAgBC,GAAhB,GAAsBxB,KAAvC;AACC;AACF,aARD,EAHe,CAYf;;AACA,iBAAKN,EAAL,CAAQ2C,QAAR,CAAiBC,GAAjB,CAAqB,eAAa,KAAKN,IAAvC,EAA6CO,MAA7C,CAAoD;AAACV,8BAAgB,EAAC,KAAKC,iBAAL,GAAyB9B;AAA3C,aAApD;AACA,iBAAK8B,iBAAL,GAAyB,CAAzB,CAde,CAef;;AACA,iBAAKqB,WAAL,CAAiBF,IAAjB;AACA,iBAAKvD,EAAL,CAAQkB,IAAR,CAAa,mBAAb,EAAkCgC,IAAlC,CAAuC;AAACC,qBAAO,EAAC,gBAAT;AAA0BjE,kBAAI,EAAC,KAAKA,IAApC;AAAyC0C,mBAAK,EAAC,KAAKA,KAApD;AAA0DW,kBAAI,EAAC,KAAKE,UAApE;AAA+EnC,mBAAK,EAACA,KAArF;AAA2F4B,kBAAI,EAAC;AAAhG,aAAvC;AACD;AAzHwB;;AAAA;AAAA,S;;;;gBARlB;;gBACA;;gBACA;;;;;;gBAON,uD;AAAS,iBAAC,YAAD;;;gBACT,uD;AAAS,iBAAC,aAAD;;;AAFCnC,oBAAc,6DAJ1B,gEAAU;AACT2D,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAFS,OAAV,CAI0B,E,+EA2BF,0E,EAAyB,kE,EAA+B,sD,EA3BtD,GAAd5D,cAAc,CAAd","file":"views-restaurant-store-store-module-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe2 implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <i class=\\\"fa fa-align-justify\\\"></i> STOK LİSTESİ\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-4\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <span class=\\\"input-group-prepend\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\r\\n                  </span>\\r\\n                  <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"search\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-12 mt-4\\\">\\r\\n                <table class=\\\"table table-bordered table-striped table-sm\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Ürün adı</th>\\r\\n                      <th>Grup</th>\\r\\n                      <th>Maliyet (KDV)</th>\\r\\n                      <th>Depo adet</th>\\r\\n                      <th>Kafe adet</th>\\r\\n                      <th>Ekleme ve silme işlemleri</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let item of products | filter:search\\\">\\r\\n                      <td>{{ item.payload.val().name }}</td>\\r\\n                      <td>{{ item.payload.val().group }}</td>\\r\\n                      <td>{{ item.payload.val().cost | number : '.2-2'  }} ₺</td>\\r\\n                      <td>{{ item.payload.val().stock | number : '.2-2'  }}</td>\\r\\n                      <td>{{ item.payload.val().restaurant1Stock | number : '.2-2'  }}</td>\\r\\n                      <td>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-6\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal.show()\\\">Stok ekle</button>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-6\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-square btn-block\\\" (click)=\\\"modalOpen(item.key)\\\" (click)=\\\"largeModal2.show()\\\">Stok sil</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div bsModal #largeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Stok ekleme işlemi</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <input disabled [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\r\\n                    <span class=\\\"help-block\\\"></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Ürün maliyeti</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\"> ₺</span>\\r\\n                      </div>\\r\\n                      <input disabled [(ngModel)]=\\\"cost\\\" name=\\\"cost\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"{{this.cost}}\\\">\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\">.00</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <select disabled id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\r\\n                      <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <input disabled [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Malzeme adı</th>\\r\\n                      <th>Kullanılan miktar</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\r\\n                      <td>{{ material.name }}</td>\\r\\n                      <td>{{ material.amount }}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Eklenecek stok sayısı</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <input [(ngModel)]=\\\"modalStock\\\" name=\\\"modalStock\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"Şuanki stok: {{this.restaurant1Stocks}}\\\">\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\">adet</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"result == 0\\\">\\r\\n                  <div class=\\\"alert alert-warning col-12\\\" role=\\\"alert\\\">\\r\\n                    Kullanılan malzeme stoğu bu ürünü üretmek için yeterli değildir.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"largeModal.hide()\\\">Vazgeç</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addStock(modalStock)\\\" [disabled]=\\\"(stocks < modalStock || modalStock <= 0)? true:false\\\">Değişiklikleri kaydet</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\\r\\n  <div bsModal #largeModal2=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Stok silme işlemi</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"largeModal2.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <form action=\\\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Ürün adı</label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <input disabled [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.name}}\\\">\\r\\n                    <span class=\\\"help-block\\\"></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"select3\\\">Ürün grubu</label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <select disabled id=\\\"select3\\\" name=\\\"group\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"group\\\" required>\\r\\n                      <option [value]=\\\"item.name\\\" *ngFor=\\\"let item of groups\\\">{{ item.name }}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">Ürün fotoğrafı</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <input disabled [(ngModel)]=\\\"photo\\\" name=\\\"photo\\\" type=\\\"text\\\" id=\\\"text-input\\\" class=\\\"form-control\\\" placeholder=\\\"{{this.photo}}\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"{{photo}}\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-bordered table-striped table-sm\\\" *ngIf=\\\"materialCount != 0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Malzeme adı</th>\\r\\n                      <th>Kullanılan miktar</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let material of materialsList, let i = index\\\">\\r\\n                      <td>{{ material.name }}</td>\\r\\n                      <td>{{ material.amount }}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-form-label col-md-3\\\" for=\\\"appendedPrependedInput\\\">Silinecek stok sayısı</label>\\r\\n                  <div class=\\\"controls col-md-9\\\">\\r\\n                    <div class=\\\"input-prepend input-group\\\">\\r\\n                      <input [(ngModel)]=\\\"stock\\\" name=\\\"stock\\\" id=\\\"appendedPrependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"number\\\" placeholder=\\\"Şuanki stok: {{this.restaurant1Stocks}}\\\">\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\">adet</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"largeModal2.hide()\\\">Vazgeç</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"returnStock(stock)\\\" [disabled]=\\\"(stock > this.restaurant1Stocks || stock <= 0)? true:false\\\">Değişiklikleri kaydet</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { StoreComponent } from './store.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StoreComponent,\r\n    data: {\r\n      title: 'store'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class storeRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreComponent } from './store.component';\r\nimport { storeRoutingModule } from './store-routing.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { searchPipe2 } from './pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    storeRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    CommonModule,\r\n    ModalModule,\r\n  ],\r\n  declarations: [ \r\n    StoreComponent,\r\n    searchPipe2,\r\n  ]\r\n})\r\nexport class StoreModule { \r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store.component.html',\r\n})\r\nexport class StoreComponent implements OnInit {\r\n  @ViewChild('largeModal') public largeModal: ModalDirective;\r\n  @ViewChild('largeModal2') public largeModal2: ModalDirective;\r\n  search;\r\n  group;\r\n  name;\r\n  photo;\r\n  kdvPrice;\r\n  restaurant1Stocks;\r\n  stocks = 0;\r\n  total = 0;\r\n  keys;\r\n  modalStock = null;\r\n  stock = null;\r\n  groups;\r\n  materialCount = 0;\r\n  products;\r\n  kdv;\r\n  cost;\r\n  stockDetail = [];\r\n  product = []\r\n  oldCost = 0;\r\n  prodCount = 1;\r\n  stockDepo;\r\n  materialsList = [];\r\n  modalDetail = [];\r\n  dateString;\r\n  constructor(private db:AngularFireDatabase,auth:AngularFireAuth,private router:Router){\r\n    auth.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        if((user.email == \"cafe2@sks.com\" || user.email == \"admin@sks.com\") == false){\r\n          router.navigate([\"/stock\"]);\r\n        }\r\n      }\r\n    })\r\n    db.list('/groups').valueChanges().subscribe(i => {\r\n      this.groups = i;\r\n    });\r\n    db.list('/products').snapshotChanges().forEach(i=>{\r\n      this.products = i;\r\n    });\r\n  }\r\n  ngOnInit(){}\r\n  modalOpen(key){\r\n    this.products.forEach(element => {\r\n      if(key == element.key){\r\n        this.product = element;\r\n        this.group = element.payload.val().group;\r\n        this.name = element.payload.val().name;\r\n        this.photo = element.payload.val().photo;\r\n        this.kdv = element.payload.val().kdv;\r\n        this.kdvPrice = element.payload.val().kdvPrice;\r\n        this.stockDetail = element.payload.val().stockDetail;\r\n        this.cost = element.payload.val().cost;\r\n        this.oldCost = element.payload.val().cost;\r\n        this.stocks = element.payload.val().stock;\r\n        this.stock = element.payload.val().restaurant1Stock;\r\n        this.restaurant1Stocks = element.payload.val().restaurant1Stock;\r\n        this.prodCount = element.payload.val().prodCount;\r\n        this.materialsList = element.payload.val().material;\r\n        this.materialCount = element.payload.val().materialCount;\r\n      }\r\n    });\r\n    this.keys = key;\r\n  }\r\n\r\n  addStock(stock){\r\n    const date = new Date();\r\n    this.dateString = date.toLocaleString('tr-TR');\r\n    this.db.database.ref('/products/'+this.keys).update({stock:this.stocks - stock});\r\n    if(this.stockDetail.length > 0){\r\n      var average = 0;\r\n      var amount = 0;\r\n      this.stockDetail.forEach(element => {\r\n        average += element.cost * element.stock;\r\n        amount += element.stock;\r\n      });\r\n      average = average / amount;\r\n      this.db.database.ref(\"/products/\"+this.keys).update({cost: average});\r\n    }\r\n    else if(this.stockDetail.length == 1){\r\n      this.db.database.ref(\"/products/\"+this.keys).update({cost: this.stockDetail[0].cost});\r\n    }\r\n    this.db.database.ref('/products/'+this.keys+'/stockDetail').set(this.stockDetail);\r\n    this.db.database.ref('/products/'+this.keys).update({restaurant1Stock:this.restaurant1Stocks + stock});\r\n    this.db.list(\"/statistics/stock\").push({process:\"Restoran 1 aktarma\", name:this.name,group:this.group,date:this.dateString,stock:stock,cost:0});    \r\n    this.products.forEach(element => {\r\n      if(element.payload.val().materialCount > 0){\r\n        element.payload.val().material.forEach(x => {\r\n          if(this.keys == x.id){\r\n            this.db.database.ref(\"/products/\"+ element.key).update({cost: element.payload.val().cost - this.oldCost + average});\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.largeModal.hide();\r\n    this.total = 0;\r\n    this.stock = null;\r\n    this.stocks = 0;\r\n    this.restaurant1Stocks = 0;\r\n  }\r\n  returnStock(stock){\r\n    const date = new Date();\r\n    this.dateString = date.toLocaleString('tr-TR');\r\n    this.products.forEach(element => {\r\n      if(this.keys == element.key){\r\n      this.name = element.payload.val().name;\r\n      this.group = element.payload.val().group;\r\n      this.photo = element.payload.val().photo;\r\n      this.restaurant1Stocks = element.payload.val().restaurant1Stock;\r\n      this.stockDepo = element.payload.val().stock;\r\n      }\r\n    });\r\n    //this.db.database.ref('/products/'+this.keys).update({stock:this.stock + stock});\r\n    this.db.database.ref('/products/'+this.keys).update({restaurant1Stock:this.restaurant1Stocks - stock});\r\n    this.restaurant1Stocks = 0;\r\n    //this.stock = 0;\r\n    this.largeModal2.hide();\r\n    this.db.list(\"/statistics/stock\").push({process:\"Restoran 1 çöp\",name:this.name,group:this.group,date:this.dateString,stock:stock,cost:0});\r\n  }\r\n}\r\n"]}