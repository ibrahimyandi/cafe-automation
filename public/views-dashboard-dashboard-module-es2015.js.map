{"version":3,"sources":["./src/app/views/dashboard/Dashboard.component.html","./src/app/views/dashboard/dashboard.module.ts","./src/app/views/dashboard/pipe.ts","./src/app/views/dashboard/dashboard-routing.module.ts","./src/app/views/dashboard/dashboard.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,k7CAAm3C,aAAa,iCAAiC,cAAc,iCAAiC,mCAAmC,kCAAkC,kCAAkC,kCAAkC,cAAc,iCAAiC,iEAAiE,kCAAkC,aAAa,2PAA2P,iCAAiC,g/CAAg/C,gBAAgB,+BAA+B,aAAa,+BAA+B,cAAc,+BAA+B,kCAAkC,gCAAgC,cAAc,+BAA+B,+CAA+C,gCAAgC,aAAa,iQAAiQ,+BAA+B,0WAA0W,oEAAoE,sDAAsD,KAAK,6CAA6C,6EAA6E,E;;;;;;;;;;;;;;;;;;;;;;;;;ACAhsJ;AACI;AACH;AACgB;AACJ;AACP;AACY;AACS;AAChC;IAiBvB,eAAe,SAAf,eAAe;CAAI;AAAnB,eAAe;IAf3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,0DAAW;YACX,gFAAsB;YACtB,uDAAY;YACZ,uEAAgB;YAChB,mEAAa,CAAC,OAAO,EAAE;YACvB,4DAAY;SAEb;QACD,YAAY,EAAE;YACZ,uEAAkB;YAClB,gDAAU;SACX;KACF,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;;;;;;;;ACzBwB;IAMvC,UAAU,SAAV,UAAU;IACnB,SAAS,CAAC,KAAU,EAAE,IAAU;QAE5B,IAAG,CAAC,KAAK;YAAC,OAAO,IAAI,CAAC;QACtB,IAAG,CAAC,IAAI;YAAC,OAAO,KAAK,CAAC;QAEtB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE1B,OAAO,KAAK,CAAC,MAAM,CAAC,UAAS,IAAI;YAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAZY,UAAU;IAJtB,0DAAI,CAAC;QACF,IAAI,EAAE,QAAQ;KACjB,CAAC;GAEW,UAAU,CAYtB;AAZsB;;;;;;;;;;;;;;;;;;;;ACNkB;AACc;AAEI;AAE3D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;QAC7B,IAAI,EAAE;YACJ,KAAK,EAAE,WAAW;SACnB;KACF;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACnBe;AACW;AACO;IAKvD,kBAAkB,SAAlB,kBAAkB;IAa7B,YAAoB,EAAsB,EAAS,KAAkB;QAAjD,OAAE,GAAF,EAAE,CAAoB;QAAS,UAAK,GAAL,KAAK,CAAa;QAZrE,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QACd,UAAK,GAAG,EAAE,CAAC;QAUR,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACnD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAChC,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;YAC3E,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC7C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC3B,IAAG,OAAO,CAAC,OAAO,IAAI,QAAQ;oBAC5B,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;;oBAElD,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAtBD,MAAM,CAAC,KAAK;QACV,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1B,OAAO,GAAG,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAmBD,KAAK,CAAC,SAAS;QACb,IAAG,SAAS,GAAC,YAAY,EAAC;YACxB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAC,YAAY,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SAClC;aACG;YACF,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;SAC5B;IACH,CAAC;IACD,cAAc,CAAC,QAAQ;QACrB,IAAG,QAAQ,IAAI,YAAY,EAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACtB;aACG;YACF,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IACD,QAAQ,KAAG,CAAC;CACb;;YA3DQ,0EAAmB;YACnB,4EAAY;;AAKR,kBAAkB;IAH9B,+DAAS,CAAC;QACT,sFAAuC;KACxC,CAAC;mFAcuB,0EAAmB,EAAe,4EAAY;GAb1D,kBAAkB,CAqD9B;AArD8B","file":"views-dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Satılan Ürünler\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-prepend\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n                </span>\\n                <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"sellProdSearch\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"sellProdSearch\\\">\\n              </div>\\n                </div>\\n            <div class=\\\"col-12 mt-4\\\">\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"sellProd\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Ürün adı</th>\\n                    <th>Grup</th>\\n                    <th>Fiyat</th>\\n                    <th>Maliyet</th>\\n                    <th>Adet</th>\\n                    <th>Kâr</th>\\n                    <th>Tarih</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let item of statistics | filter:sellProdSearch\\\">\\n                    <td>{{ item.name }}</td>\\n                    <td>{{ item.group }}</td>\\n                    <td>{{ item.kdvPrice | number : '.2-2' }}₺</td>\\n                    <td>{{ item.kdvCost | number : '.2-2' }}₺</td>\\n                    <td>{{ item.count }}</td>\\n                    <td>{{ (item.kdvPrice - item.kdvCost) * item.count | number : '.2-2' }}₺</td>\\n                    <td>{{ item.date }}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">Toplam Kâr: {{ totalIncome | number : '.2-2' }}₺</div>\\n            <div class=\\\"col-6 float-right\\\"><button (click)=\\\"clearAndExport('statistics')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-align-justify\\\"></i> Eklenen Stoklar\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"input-group\\\">\\n              <span class=\\\"input-group-prepend\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\n              </span>\\n              <input type=\\\"text\\\" id=\\\"input1-group2\\\"  [(ngModel)]=\\\"search\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\">\\n            </div>\\n              </div>\\n          <div class=\\\"col-12 mt-4\\\">\\n            <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"stockProd\\\">\\n              <thead>\\n                <tr>\\n                  <th>İşlem</th>\\n                  <th>Ürün adı</th>\\n                  <th>Grup</th>\\n                  <th>Maliyet</th>\\n                  <th>Adet</th>\\n                  <th>Toplam tutar</th>\\n                  <th>Tarih</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of stock | filter:search\\\">\\n                  <td>{{ item.process }}</td>\\n                  <td>{{ item.name }}</td>\\n                  <td>{{ item.group }}</td>\\n                  <td>{{ item.kdvCost | number : '.2-2' }}₺</td>\\n                  <td>{{ item.stock }}</td>\\n                  <td>{{ item.kdvCost * item.stock | number : '.2-2' }}₺</td>\\n                  <td>{{ item.date }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">Stok eklenen ürün maliyeti toplamı: {{ totalCost | number : '.2-2' }}₺</div>\\n          <div class=\\\"col-6\\\"><button (click)=\\\"clearAndExport('stock')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"cord-body\\\">\\n        <div class=\\\"alert alert-secondary\\\" style=\\\"margin-bottom: 0px;\\\" role=\\\"alert\\\">\\n          <div>Genel durum : <span [ngStyle]=\\\"{'color': totalIncome - totalCost > 0? 'green' : 'red'}\\\">{{ totalIncome - totalCost | number : '.2-2' }}₺</span></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from \"@angular/common\";\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { searchPipe } from './pipe';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    DashboardRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    CommonModule,\n\n  ],\n  declarations: [ \n    DashboardComponent,\n    searchPipe,\n  ]\n})\nexport class DashboardModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ExcelService } from '../../shared/services/excel.services';\n\n@Component({\n  templateUrl: 'Dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n  statistics = [];\n  totalIncome = 0;\n  totalCost = 0;\n  stock = [];\n  sellProdSearch;\n  search;\n  filter(value){\n    return value.filter((val) => {\n      return val.toLocaleLowerCase().includes(value);\n    })\n  }\n\n  constructor(private db:AngularFireDatabase,private excel:ExcelService){\n     db.list('/statistics').valueChanges().subscribe(i => {\n      this.statistics = i.reverse();\n      this.statistics.forEach(element => {\n        this.totalIncome += (element.kdvPrice - element.kdvCost) * element.count;\n      });\n    });\n    db.list('/stock').valueChanges().subscribe(i => {\n      this.stock = i.reverse();\n      this.stock.forEach(element => {\n        if(element.process == \"ekleme\")\n          this.totalCost += element.kdvCost * element.stock;\n        else\n          this.totalCost -= element.kdvCost * element.stock;\n      });\n    });\n  }\n  print(tableName):void{\n    if(tableName=\"statistics\"){\n      this.excel.exportAsExcelFile(this.statistics,\"istatistik\");\n      console.log(\"istatistik yazdır\");\n    }\n    else{\n      this.excel.exportAsExcelFile(this.stock,\"stock\");\n      console.log(\"stok yazdır\");\n    }\n  }\n  clearAndExport(dataName){\n    if(dataName == \"statistics\"){\n      this.excel.exportAsExcelFile(this.statistics,\"statistics\");\n      this.db.list(\"statistics\").remove();\n      this.totalIncome = 0;\n    }\n    else{\n      this.excel.exportAsExcelFile(this.stock,\"stock\");    \n      this.db.list(\"stock\").remove();\n      this.totalCost = 0;\n    }\n  }\n  ngOnInit(){}\n}\n"],"sourceRoot":"webpack:///"}