{"version":3,"sources":["./src/app/views/dashboard/Dashboard.component.html","./src/app/views/dashboard/dashboard.module.ts","./src/app/views/dashboard/pipe.ts","./src/app/views/dashboard/dashboard-routing.module.ts","./src/app/views/dashboard/dashboard.component.ts"],"names":[],"mappings":"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","file":"views-dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Satılan Ürünler\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <span class=\\\"input-group-prepend\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\r\\n                </span>\\r\\n                <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"sellProdSearch\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\" [(ngModel)]=\\\"sellProdSearch\\\" (ngModelChange)=\\\"resetList(1)\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\"></div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <button class=\\\"btn btn-primary float-right btn-block\\\" type=\\\"submit\\\" (click)=\\\"allList(1)\\\">Tümünü listele</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-12 mt-4\\\">\\r\\n              <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"sellProd\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>İşlem</th>\\r\\n                    <th>Ürün adı</th>\\r\\n                    <th>Grup</th>\\r\\n                    <th>Fiyat</th>\\r\\n                    <th>Maliyet</th>\\r\\n                    <th>Adet</th>\\r\\n                    <th>Toplam satış</th>\\r\\n                    <th>Kâr</th>\\r\\n                    <th>Tarih</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of statistics | filter:sellProdSearch | slice:min1:max1\\\">\\r\\n                    <td>{{ item.process }}</td>\\r\\n                    <td>{{ item.name }}</td>\\r\\n                    <td>{{ item.group }}</td>\\r\\n                    <td>{{ item.kdvPrice | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ item.cost | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ item.count }}</td>\\r\\n                    <td>{{ item.kdvPrice * item.count | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ (item.kdvPrice - item.cost) * item.count | number : '.2-2' }} ₺</td>\\r\\n                    <td>{{ item.date }}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n              <nav aria-label=\\\"...\\\" class=\\\"float-right\\\">\\r\\n                <ul class=\\\"pagination pagination-sm\\\">\\r\\n                  <li class=\\\"page-item\\\" *ngFor=\\\"let item of [].constructor(soldLength); let i = index\\\">\\r\\n                    <span (click)=\\\"pagination(1, i)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\">{{i+1}}</span>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </nav>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">Toplam Satış: {{ totalSell | number : '.2-2' }} ₺ <br> Toplam Kâr: {{ totalIncome | number : '.2-2' }} ₺</div>\\r\\n            <div class=\\\"col-4\\\">Listelenen Satış: {{ listSold(statistics | filter:sellProdSearch | slice:min1:max1) | number : '.2-2' }} ₺ <br> Listelenen Kâr: {{ listProfit(statistics | filter:sellProdSearch) | number : '.2-2' }} ₺</div>\\r\\n            <div class=\\\"col-4 float-right\\\"><button (click)=\\\"clearAndExport('statistics')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <i class=\\\"fa fa-align-justify\\\"></i> Eklenen Stoklar\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <span class=\\\"input-group-prepend\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i> Ara</button>\\r\\n              </span>\\r\\n              <input type=\\\"text\\\" id=\\\"input1-group2\\\"  [(ngModel)]=\\\"search\\\" name=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Ürün\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\"></div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <button class=\\\"btn btn-primary float-right btn-block\\\" type=\\\"submit\\\" (click)=\\\"allList(2)\\\">Tümünü listele</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 mt-4\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-sm\\\" id=\\\"stockProd\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>İşlem</th>\\r\\n                  <th>Ürün adı</th>\\r\\n                  <th>Grup</th>\\r\\n                  <th>Maliyet</th>\\r\\n                  <th>Adet</th>\\r\\n                  <th>Toplam maliyet</th>\\r\\n                  <th>Tarih</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of stock | filter:search | slice:min2:max2\\\">\\r\\n                  <td>{{ item.process }}</td>\\r\\n                  <td>{{ item.name }}</td>\\r\\n                  <td>{{ item.group }}</td>\\r\\n                  <td>{{ item.cost | number : '.2-2' }} ₺</td>\\r\\n                  <td>{{ item.stock }}</td>\\r\\n                  <td>{{ item.cost * item.stock | number : '.2-2' }} ₺</td>\\r\\n                  <td>{{ item.date }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <nav aria-label=\\\"...\\\" class=\\\"float-right\\\">\\r\\n              <ul class=\\\"pagination pagination-sm\\\">\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let item of [].constructor(stockLength); let i = index\\\">\\r\\n                  <span (click)=\\\"pagination(2, i)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\">{{i+1}}</span>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-4\\\">Toplam maliyet: {{ totalCost | number : '.2-2' }} ₺</div>\\r\\n          <div class=\\\"col-4\\\">Listelenen maliyet: {{ listCost(stock | filter:search | slice:min2:max2) | number : '.2-2' }} ₺</div>\\r\\n          <div class=\\\"col-4\\\"><button (click)=\\\"clearAndExport('stock')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-square float-right\\\">Temizle ve excele aktar</button></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"cord-body\\\">\\r\\n        <div class=\\\"alert alert-secondary\\\" style=\\\"margin-bottom: 0px;\\\" role=\\\"alert\\\">\\r\\n          <div>Genel durum : <span [ngStyle]=\\\"{'color': totalIncome - totalCost > 0? 'green' : 'red'}\\\">{{ totalSell - totalCost | number : '.2-2' }} ₺</span></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { searchPipe } from './pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    DashboardRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    CommonModule,\r\n\r\n  ],\r\n  declarations: [ \r\n    DashboardComponent,\r\n    searchPipe,\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\n\r\nexport class searchPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        if(!value)return null;\r\n        if(!args)return value;\r\n\r\n        args = args.toLowerCase();\r\n\r\n        return value.filter(function(item){\r\n            return JSON.stringify(item).toLowerCase().includes(args);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      title: 'Dashboard'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { ExcelService } from '../../shared/services/excel.services';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: 'Dashboard.component.html'\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  statistics = [];\r\n  totalIncome = 0;\r\n  totalSell = 0;\r\n  totalCost = 0;\r\n  stock = [];\r\n  min1 = 0;\r\n  max1 = 25;\r\n  min2 = 0;\r\n  max2 = 25;\r\n  user;\r\n  stockLength = 0;\r\n  soldLength = 0;\r\n  sellProdSearch;\r\n  search;\r\n  filter(value){\r\n    return value.filter((val) => {\r\n      console.log(val);\r\n      return val.toLocaleLowerCase().includes(value);\r\n    })\r\n    \r\n  }\r\n\r\n  constructor(private db:AngularFireDatabase,private excel:ExcelService,auth:AngularFireAuth,private router:Router){\r\n    auth.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        this.user = user.email;\r\n        if(this.user.search(\"admin\") == -1){\r\n          router.navigate([\"/stock\"]);\r\n        }\r\n      }\r\n    })\r\n\r\n    db.list('/statistics/sold').valueChanges().subscribe(i => {\r\n      this.statistics = i.reverse();\r\n      this.soldLength = Math.ceil(this.statistics.length/25);\r\n      this.statistics.forEach(element => {\r\n        this.totalIncome += (element.kdvPrice - element.cost) * element.count;\r\n        this.totalSell += element.kdvPrice * element.count;\r\n      });\r\n    });\r\n    db.list('/statistics/stock').valueChanges().subscribe(i => {\r\n      this.stock = i.reverse();\r\n      this.stockLength = Math.ceil(this.stock.length/25);\r\n      this.stock.forEach(element => {\r\n        this.totalCost += element.cost * element.stock;\r\n      });\r\n    });\r\n  }\r\n  listSold(x){\r\n    let sum = 0;\r\n    x.forEach(element => {\r\n      sum += element.kdvPrice * element.count;\r\n    });\r\n    return sum;\r\n  }\r\n  listProfit(x){\r\n    let sum = 0;\r\n    x.forEach(element => {\r\n      sum += element.kdvPrice * element.count - element.cost * element.count;\r\n    });\r\n    return sum;\r\n  }\r\n  listCost(x){\r\n    let sum = 0;\r\n    x.forEach(element => {\r\n      sum += element.cost * element.stock;\r\n    });\r\n    return sum;\r\n  }\r\n  \r\n  pagination(x,i){\r\n    if(x == 1){\r\n      this.min1 = i * 25;\r\n      this.max1 = i * 25 + 25; \r\n    }\r\n    else if(x == 2){\r\n      this.min2 = i * 25;\r\n      this.max2 = i * 25 + 25; \r\n    }\r\n  }\r\n  allList(x){\r\n    if(x == 1){\r\n      this.min1 = 0;\r\n      this.max1 = this.statistics.length;\r\n    }\r\n    else if(x == 2){\r\n      this.min2 = 0;\r\n      this.max2 = this.stock.length;\r\n    }\r\n  }\r\n  print(tableName):void{\r\n    if(tableName=\"statistics\"){\r\n      this.excel.exportAsExcelFile(this.statistics,\"istatistik\");\r\n      console.log(\"istatistik yazdır\");\r\n    }\r\n    else{\r\n      this.excel.exportAsExcelFile(this.stock,\"stock\");\r\n      console.log(\"stok yazdır\");\r\n    }\r\n  }\r\n  clearAndExport(dataName){\r\n    if(dataName == \"statistics\"){\r\n      this.excel.exportAsExcelFile(this.statistics,\"statistics\");\r\n      this.db.list(\"statistics\").remove();\r\n      this.totalIncome = 0;\r\n    }\r\n    else{\r\n      this.excel.exportAsExcelFile(this.stock,\"stock\");    \r\n      this.db.list(\"stock\").remove();\r\n      this.totalCost = 0;\r\n    }\r\n  }\r\n  ngOnInit(){}\r\n}\r\n"],"sourceRoot":"webpack:///"}